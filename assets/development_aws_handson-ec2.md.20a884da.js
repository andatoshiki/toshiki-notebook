import{_ as s,a,b as n,c as p,d as l,e as o,f as e}from"./chunks/ec2_keypair_console.fc89ef69.js";import{a as t,_ as c}from"./chunks/VPC.e1acca4d.js";import{_ as r,c as y,o as i,R as d}from"./chunks/framework.ade46834.js";const f=JSON.parse('{"title":"Hands-on #1: 初めての EC2 インスタンスを起動する","description":"","frontmatter":{},"headers":[],"relativePath":"development/aws/handson-ec2.md","filePath":"development/aws/handson-ec2.md","lastUpdated":1686650847000}'),A={name:"development/aws/handson-ec2.md"},u=d('<h1 id="hands-on-1-初めての-ec2-インスタンスを起動する" tabindex="-1">Hands-on #1: 初めての EC2 インスタンスを起動する <a class="header-anchor" href="#hands-on-1-初めての-ec2-インスタンスを起動する" aria-label="Permalink to &quot;Hands-on \\#1: 初めての EC2 インスタンスを起動する&quot;">​</a></h1><p>ハンズオンの第一回では， CDK を使って EC2 のインスタンス(仮想サーバー)を作成し，SSH でサーバーにログインする，という演習を行う． このハンズオンを終えれば，あなたは自分だけのサーバーを AWS 上に立ち上げ，自由に計算を走らせることができるようになるのである！</p><h2 id="準備" tabindex="-1">準備 <a class="header-anchor" href="#準備" aria-label="Permalink to &quot;準備&quot;">​</a></h2><p>ハンズオンのソースコードは GitHub の <a href="https://github.com/andatoshiki/toshiki-notebooktree/main/handson/ec2-get-started" target="_blank" rel="noreferrer">handson/ec2-get-started</a> に置いてある．</p><p>このハンズオンは，基本的に <a href="https://aws.amazon.com/free/?all-free-tier.sort-by=item.additionalFields.SortRank&amp;all-free-tier.sort-order=asc" target="_blank" rel="noreferrer">AWS の無料枠</a> の範囲内で実行することができる．</p><p>まずは，ハンズオンを実行するための環境を整える． これらの環境整備は，後のハンズオンでも前提となるものなので確実にミスなく行っていただきたい．</p><ul><li><p><strong>AWS Account</strong>: ハンズオンを実行するには個人の AWS アカウントが必要である． AWS アカウントの取得については <a href="#sec:create_aws_account">???</a> を参照のこと．</p></li><li><p><strong>Python と Node.js</strong>: 本ハンズオンを実行するには，Python (3.6 以上)，Node.js (12.0 以上) がインストールされていなければならない．</p></li><li><p><strong>AWS CLI</strong>: AWS CLI のインストールについては， <a href="#aws_cli_install">???</a> を参照． ここに記載されている認証鍵の設定も済ませておくこと．</p></li><li><p><strong>AWS CDK</strong>: AWS CDK のインストールについては， <a href="#aws_cdk_install">???</a> を参照．</p></li><li><p><strong>ソースコードのダウンロード</strong>: 本ハンズオンで使用するプログラムのソースコードを，以下のコマンドを使って GitHub からダウンロードする．</p></li></ul><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki solarized-dark vp-code-dark"><code><span class="line"><span style="color:#268BD2;">$</span><span style="color:#839496;"> </span><span style="color:#2AA198;">git</span><span style="color:#839496;"> </span><span style="color:#2AA198;">clone</span><span style="color:#839496;"> </span><span style="color:#2AA198;">https://github.com/tomomano/learn-aws-by-coding.git</span></span></code></pre><pre class="shiki solarized-light vp-code-light"><code><span class="line"><span style="color:#268BD2;">$</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">git</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">clone</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">https://github.com/tomomano/learn-aws-by-coding.git</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>あるいは， <a href="https://github.com/tomomano/learn-aws-by-coding" target="_blank" rel="noreferrer">https://github.com/tomomano/learn-aws-by-coding</a> のページに行って，右上のダウンロードボタンからダウンロードすることもできる．</p><p><strong>Docker を使用する場合</strong></p><p>Python, Node.js, AWS CDK など，ハンズオンのプログラムを実行するために必要なプログラム/ライブラリがインストール済みの Docker image を用意した． また，ハンズオンのソースコードもパッケージ済みである． Docker の使い方を知っている読者は，これを使えば，諸々のインストールをする必要なく，すぐにハンズオンのプログラムを実行できる．</p><p>使用方法については <a href="#sec_handson_docker">???</a> を参照のこと．</p><h2 id="ssh" tabindex="-1">SSH <a class="header-anchor" href="#ssh" aria-label="Permalink to &quot;SSH&quot;">​</a></h2><p><strong>SSH (secure shell)</strong> は Unix 系のリモートサーバーに安全にアクセスするためのツールである． 本ハンズオンでは， SSH を使って仮想サーバーにアクセスする． SSH に慣れていない読者のため，簡単な説明をここで行おう．</p><p>SSH による通信はすべて暗号化されているので，機密情報をインターネットを介して安全に送受信することができる． 本ハンズオンで，リモートのサーバーにアクセスするための SSH クライアントがローカルマシンにインストールされている必要がある． SSH クライアントは Linux/Mac には標準搭載されている． Windows の場合は WSL をインストールすることで SSH クライアントを利用することを推奨する (<a href="#environments">???</a> を参照)．</p><p>SSH コマンドの基本的な使い方を次に示す． <code>&lt;host name&gt;</code> はアクセスする先のサーバーの IP アドレスや DNS によるホストネームが入る． <code>&lt;user name&gt;</code> は接続する先のユーザー名である．</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki solarized-dark vp-code-dark"><code><span class="line"><span style="color:#268BD2;">$</span><span style="color:#839496;"> </span><span style="color:#2AA198;">ssh</span><span style="color:#839496;"> </span><span style="color:#859900;">&lt;</span><span style="color:#2AA198;">user</span><span style="color:#839496;"> </span><span style="color:#2AA198;">nam</span><span style="color:#839496;">e</span><span style="color:#859900;">&gt;</span><span style="color:#2AA198;">@</span><span style="color:#859900;">&lt;</span><span style="color:#2AA198;">host</span><span style="color:#839496;"> </span><span style="color:#2AA198;">nam</span><span style="color:#839496;">e</span><span style="color:#859900;">&gt;</span></span></code></pre><pre class="shiki solarized-light vp-code-light"><code><span class="line"><span style="color:#268BD2;">$</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">ssh</span><span style="color:#657B83;"> </span><span style="color:#859900;">&lt;</span><span style="color:#2AA198;">user</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">nam</span><span style="color:#657B83;">e</span><span style="color:#859900;">&gt;</span><span style="color:#2AA198;">@</span><span style="color:#859900;">&lt;</span><span style="color:#2AA198;">host</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">nam</span><span style="color:#657B83;">e</span><span style="color:#859900;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>SSH は平文のパスワードによる認証を行うこともできるが，より強固なセキュリティを施すため，<strong>公開鍵暗号方式(Public Key Cryptography)による認証</strong>を行うことが強く推奨されており， EC2 はこの方法でしかアクセスを許していない． 公開鍵暗号方式の仕組みについては各自勉強してほしい． 本ハンズオンにおいて大事なことは，<strong>EC2 インスタンスが公開鍵(Public key)を保持し，クライアントとなるコンピュータ(読者自身のコンピュータ)が秘密鍵(Private key)を保持する</strong>，という点である． EC2 のインスタンスには秘密鍵を持ったコンピュータのみがアクセスすることができる．逆に言うと，秘密鍵が漏洩すると第三者もサーバーにアクセスできることになるので，<strong>秘密鍵は絶対に漏洩することのないよう注意して管理する</strong>．</p><p>SSH コマンドでは，ログインのために使用する秘密鍵ファイルを <code>-i</code> もしくは <code>--identity_file</code> のオプションで指定することができる． たとえば，次のように使う．</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki solarized-dark vp-code-dark"><code><span class="line"><span style="color:#268BD2;">$</span><span style="color:#839496;"> </span><span style="color:#2AA198;">ssh</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">-i</span><span style="color:#839496;"> </span><span style="color:#2AA198;">Ec2SecretKey.pem</span><span style="color:#839496;"> </span><span style="color:#859900;">&lt;</span><span style="color:#2AA198;">user</span><span style="color:#839496;"> </span><span style="color:#2AA198;">nam</span><span style="color:#839496;">e</span><span style="color:#859900;">&gt;</span><span style="color:#2AA198;">@</span><span style="color:#859900;">&lt;</span><span style="color:#2AA198;">host</span><span style="color:#839496;"> </span><span style="color:#2AA198;">nam</span><span style="color:#839496;">e</span><span style="color:#859900;">&gt;</span></span></code></pre><pre class="shiki solarized-light vp-code-light"><code><span class="line"><span style="color:#268BD2;">$</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">ssh</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">-i</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">Ec2SecretKey.pem</span><span style="color:#657B83;"> </span><span style="color:#859900;">&lt;</span><span style="color:#2AA198;">user</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">nam</span><span style="color:#657B83;">e</span><span style="color:#859900;">&gt;</span><span style="color:#2AA198;">@</span><span style="color:#859900;">&lt;</span><span style="color:#2AA198;">host</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">nam</span><span style="color:#657B83;">e</span><span style="color:#859900;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="アプリケーションの説明" tabindex="-1">アプリケーションの説明 <a class="header-anchor" href="#アプリケーションの説明" aria-label="Permalink to &quot;アプリケーションの説明&quot;">​</a></h2><p>このハンズオンで作成するアプリケーションの概要を <a href="#handson_01_architecture">figure_title</a> に示す．</p><p><img src="'+s+`" alt="ハンズオン#1で作製するアプリケーションのアーキテクチャ"></p><p>このアプリケーションではまず，<strong>VPC (Virtual Private Cloud)</strong> を使ってプライベートな仮想ネットワーク環境を立ち上げている． その VPC の public subnet の内側に，<strong>EC2 (Elatic Compute Cloud)</strong> の仮想サーバーを配置する． さらに，セキュリティのため， <strong>Security Group</strong> による EC2 インスタンスへのアクセス制限を設定している． このようにして作成された仮想サーバーに，SSH を使ってアクセスし，簡単な計算を行う．</p><p><a href="#handson_01_architecture">figure_title</a> のようなアプリケーションを，CDK を使って構築する．</p><p>早速ではあるが，今回のハンズオンで使用するプログラムを見てみよう (<a href="https://github.com/andatoshiki/toshiki-notebookblob/main/handson/ec2-get-started/app.py" target="_blank" rel="noreferrer">handson/ec2-get-started/app.py</a>)．</p><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki solarized-dark vp-code-dark"><code><span class="line"><span style="color:#93A1A1;font-weight:bold;">class</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">MyFirstEc2</span><span style="color:#839496;">(</span><span style="color:#6C71C4;">core</span><span style="color:#839496;">.</span><span style="color:#6C71C4;">Stack</span><span style="color:#839496;">):</span></span>
<span class="line"></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#93A1A1;font-weight:bold;">def</span><span style="color:#839496;"> </span><span style="color:#268BD2;">__init__</span><span style="color:#839496;">(self, scope: core.App, name: </span><span style="color:#859900;">str</span><span style="color:#839496;">, key_name: </span><span style="color:#859900;">str</span><span style="color:#839496;">, </span><span style="color:#859900;">**</span><span style="color:#839496;">kwargs) -&gt; </span><span style="color:#B58900;">None</span><span style="color:#839496;">:</span></span>
<span class="line"><span style="color:#839496;">        </span><span style="color:#859900;">super</span><span style="color:#839496;">().</span><span style="color:#268BD2;">__init__</span><span style="color:#839496;">(scope, name, </span><span style="color:#859900;">**</span><span style="color:#839496;">kwargs)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#839496;">        </span><span style="color:#586E75;font-style:italic;">#</span></span>
<span class="line"><span style="color:#839496;">        vpc </span><span style="color:#859900;">=</span><span style="color:#839496;"> ec2.Vpc(</span></span>
<span class="line"><span style="color:#839496;">            </span><span style="color:#268BD2;">self</span><span style="color:#839496;">, </span><span style="color:#2AA198;">&quot;MyFirstEc2-Vpc&quot;</span><span style="color:#839496;">,</span></span>
<span class="line"><span style="color:#839496;">            max_azs</span><span style="color:#859900;">=</span><span style="color:#D33682;">1</span><span style="color:#839496;">,</span></span>
<span class="line"><span style="color:#839496;">            cidr</span><span style="color:#859900;">=</span><span style="color:#2AA198;">&quot;10.10.0.0/23&quot;</span><span style="color:#839496;">,</span></span>
<span class="line"><span style="color:#839496;">            subnet_configuration</span><span style="color:#859900;">=</span><span style="color:#839496;">[</span></span>
<span class="line"><span style="color:#839496;">                ec2.SubnetConfiguration(</span></span>
<span class="line"><span style="color:#839496;">                    name</span><span style="color:#859900;">=</span><span style="color:#2AA198;">&quot;public&quot;</span><span style="color:#839496;">,</span></span>
<span class="line"><span style="color:#839496;">                    subnet_type</span><span style="color:#859900;">=</span><span style="color:#839496;">ec2.SubnetType.</span><span style="color:#CB4B16;">PUBLIC</span><span style="color:#839496;">,</span></span>
<span class="line"><span style="color:#839496;">                )</span></span>
<span class="line"><span style="color:#839496;">            ],</span></span>
<span class="line"><span style="color:#839496;">            nat_gateways</span><span style="color:#859900;">=</span><span style="color:#D33682;">0</span><span style="color:#839496;">,</span></span>
<span class="line"><span style="color:#839496;">        )</span></span>
<span class="line"></span>
<span class="line"><span style="color:#839496;">        </span><span style="color:#586E75;font-style:italic;">#</span></span>
<span class="line"><span style="color:#839496;">        sg </span><span style="color:#859900;">=</span><span style="color:#839496;"> ec2.SecurityGroup(</span></span>
<span class="line"><span style="color:#839496;">            </span><span style="color:#268BD2;">self</span><span style="color:#839496;">, </span><span style="color:#2AA198;">&quot;MyFirstEc2Vpc-Sg&quot;</span><span style="color:#839496;">,</span></span>
<span class="line"><span style="color:#839496;">            vpc</span><span style="color:#859900;">=</span><span style="color:#839496;">vpc,</span></span>
<span class="line"><span style="color:#839496;">            allow_all_outbound</span><span style="color:#859900;">=</span><span style="color:#B58900;">True</span><span style="color:#839496;">,</span></span>
<span class="line"><span style="color:#839496;">        )</span></span>
<span class="line"><span style="color:#839496;">        sg.add_ingress_rule(</span></span>
<span class="line"><span style="color:#839496;">            peer</span><span style="color:#859900;">=</span><span style="color:#839496;">ec2.Peer.any_ipv4(),</span></span>
<span class="line"><span style="color:#839496;">            connection</span><span style="color:#859900;">=</span><span style="color:#839496;">ec2.Port.tcp(</span><span style="color:#D33682;">22</span><span style="color:#839496;">),</span></span>
<span class="line"><span style="color:#839496;">        )</span></span>
<span class="line"></span>
<span class="line"><span style="color:#839496;">        </span><span style="color:#586E75;font-style:italic;">#</span></span>
<span class="line"><span style="color:#839496;">        host </span><span style="color:#859900;">=</span><span style="color:#839496;"> ec2.Instance(</span></span>
<span class="line"><span style="color:#839496;">            </span><span style="color:#268BD2;">self</span><span style="color:#839496;">, </span><span style="color:#2AA198;">&quot;MyFirstEc2Instance&quot;</span><span style="color:#839496;">,</span></span>
<span class="line"><span style="color:#839496;">            instance_type</span><span style="color:#859900;">=</span><span style="color:#839496;">ec2.InstanceType(</span><span style="color:#2AA198;">&quot;t2.micro&quot;</span><span style="color:#839496;">),</span></span>
<span class="line"><span style="color:#839496;">            machine_image</span><span style="color:#859900;">=</span><span style="color:#839496;">ec2.MachineImage.latest_amazon_linux(),</span></span>
<span class="line"><span style="color:#839496;">            vpc</span><span style="color:#859900;">=</span><span style="color:#839496;">vpc,</span></span>
<span class="line"><span style="color:#839496;">            vpc_subnets</span><span style="color:#859900;">=</span><span style="color:#839496;">ec2.SubnetSelection(subnet_type</span><span style="color:#859900;">=</span><span style="color:#839496;">ec2.SubnetType.</span><span style="color:#CB4B16;">PUBLIC</span><span style="color:#839496;">),</span></span>
<span class="line"><span style="color:#839496;">            security_group</span><span style="color:#859900;">=</span><span style="color:#839496;">sg,</span></span>
<span class="line"><span style="color:#839496;">            key_name</span><span style="color:#859900;">=</span><span style="color:#839496;">key_name</span></span>
<span class="line"><span style="color:#839496;">        )</span></span></code></pre><pre class="shiki solarized-light vp-code-light"><code><span class="line"><span style="color:#586E75;font-weight:bold;">class</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">MyFirstEc2</span><span style="color:#657B83;">(</span><span style="color:#6C71C4;">core</span><span style="color:#657B83;">.</span><span style="color:#6C71C4;">Stack</span><span style="color:#657B83;">):</span></span>
<span class="line"></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#586E75;font-weight:bold;">def</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">__init__</span><span style="color:#657B83;">(self, scope: core.App, name: </span><span style="color:#859900;">str</span><span style="color:#657B83;">, key_name: </span><span style="color:#859900;">str</span><span style="color:#657B83;">, </span><span style="color:#859900;">**</span><span style="color:#657B83;">kwargs) -&gt; </span><span style="color:#B58900;">None</span><span style="color:#657B83;">:</span></span>
<span class="line"><span style="color:#657B83;">        </span><span style="color:#859900;">super</span><span style="color:#657B83;">().</span><span style="color:#268BD2;">__init__</span><span style="color:#657B83;">(scope, name, </span><span style="color:#859900;">**</span><span style="color:#657B83;">kwargs)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#657B83;">        </span><span style="color:#93A1A1;font-style:italic;">#</span></span>
<span class="line"><span style="color:#657B83;">        vpc </span><span style="color:#859900;">=</span><span style="color:#657B83;"> ec2.Vpc(</span></span>
<span class="line"><span style="color:#657B83;">            </span><span style="color:#268BD2;">self</span><span style="color:#657B83;">, </span><span style="color:#2AA198;">&quot;MyFirstEc2-Vpc&quot;</span><span style="color:#657B83;">,</span></span>
<span class="line"><span style="color:#657B83;">            max_azs</span><span style="color:#859900;">=</span><span style="color:#D33682;">1</span><span style="color:#657B83;">,</span></span>
<span class="line"><span style="color:#657B83;">            cidr</span><span style="color:#859900;">=</span><span style="color:#2AA198;">&quot;10.10.0.0/23&quot;</span><span style="color:#657B83;">,</span></span>
<span class="line"><span style="color:#657B83;">            subnet_configuration</span><span style="color:#859900;">=</span><span style="color:#657B83;">[</span></span>
<span class="line"><span style="color:#657B83;">                ec2.SubnetConfiguration(</span></span>
<span class="line"><span style="color:#657B83;">                    name</span><span style="color:#859900;">=</span><span style="color:#2AA198;">&quot;public&quot;</span><span style="color:#657B83;">,</span></span>
<span class="line"><span style="color:#657B83;">                    subnet_type</span><span style="color:#859900;">=</span><span style="color:#657B83;">ec2.SubnetType.</span><span style="color:#CB4B16;">PUBLIC</span><span style="color:#657B83;">,</span></span>
<span class="line"><span style="color:#657B83;">                )</span></span>
<span class="line"><span style="color:#657B83;">            ],</span></span>
<span class="line"><span style="color:#657B83;">            nat_gateways</span><span style="color:#859900;">=</span><span style="color:#D33682;">0</span><span style="color:#657B83;">,</span></span>
<span class="line"><span style="color:#657B83;">        )</span></span>
<span class="line"></span>
<span class="line"><span style="color:#657B83;">        </span><span style="color:#93A1A1;font-style:italic;">#</span></span>
<span class="line"><span style="color:#657B83;">        sg </span><span style="color:#859900;">=</span><span style="color:#657B83;"> ec2.SecurityGroup(</span></span>
<span class="line"><span style="color:#657B83;">            </span><span style="color:#268BD2;">self</span><span style="color:#657B83;">, </span><span style="color:#2AA198;">&quot;MyFirstEc2Vpc-Sg&quot;</span><span style="color:#657B83;">,</span></span>
<span class="line"><span style="color:#657B83;">            vpc</span><span style="color:#859900;">=</span><span style="color:#657B83;">vpc,</span></span>
<span class="line"><span style="color:#657B83;">            allow_all_outbound</span><span style="color:#859900;">=</span><span style="color:#B58900;">True</span><span style="color:#657B83;">,</span></span>
<span class="line"><span style="color:#657B83;">        )</span></span>
<span class="line"><span style="color:#657B83;">        sg.add_ingress_rule(</span></span>
<span class="line"><span style="color:#657B83;">            peer</span><span style="color:#859900;">=</span><span style="color:#657B83;">ec2.Peer.any_ipv4(),</span></span>
<span class="line"><span style="color:#657B83;">            connection</span><span style="color:#859900;">=</span><span style="color:#657B83;">ec2.Port.tcp(</span><span style="color:#D33682;">22</span><span style="color:#657B83;">),</span></span>
<span class="line"><span style="color:#657B83;">        )</span></span>
<span class="line"></span>
<span class="line"><span style="color:#657B83;">        </span><span style="color:#93A1A1;font-style:italic;">#</span></span>
<span class="line"><span style="color:#657B83;">        host </span><span style="color:#859900;">=</span><span style="color:#657B83;"> ec2.Instance(</span></span>
<span class="line"><span style="color:#657B83;">            </span><span style="color:#268BD2;">self</span><span style="color:#657B83;">, </span><span style="color:#2AA198;">&quot;MyFirstEc2Instance&quot;</span><span style="color:#657B83;">,</span></span>
<span class="line"><span style="color:#657B83;">            instance_type</span><span style="color:#859900;">=</span><span style="color:#657B83;">ec2.InstanceType(</span><span style="color:#2AA198;">&quot;t2.micro&quot;</span><span style="color:#657B83;">),</span></span>
<span class="line"><span style="color:#657B83;">            machine_image</span><span style="color:#859900;">=</span><span style="color:#657B83;">ec2.MachineImage.latest_amazon_linux(),</span></span>
<span class="line"><span style="color:#657B83;">            vpc</span><span style="color:#859900;">=</span><span style="color:#657B83;">vpc,</span></span>
<span class="line"><span style="color:#657B83;">            vpc_subnets</span><span style="color:#859900;">=</span><span style="color:#657B83;">ec2.SubnetSelection(subnet_type</span><span style="color:#859900;">=</span><span style="color:#657B83;">ec2.SubnetType.</span><span style="color:#CB4B16;">PUBLIC</span><span style="color:#657B83;">),</span></span>
<span class="line"><span style="color:#657B83;">            security_group</span><span style="color:#859900;">=</span><span style="color:#657B83;">sg,</span></span>
<span class="line"><span style="color:#657B83;">            key_name</span><span style="color:#859900;">=</span><span style="color:#657B83;">key_name</span></span>
<span class="line"><span style="color:#657B83;">        )</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br></div></div><ul><li><p>まず最初に，VPC を定義する．</p></li><li><p>次に， security group (SG) を定義している． ここでは，任意の IPv4 のアドレスからの，ポート 22 (SSH の接続に使用される)への接続を許可している． それ以外の接続は拒絶される．</p></li><li><p>最後に，上記で作った VPC と SG が付与された EC2 インスタンスを作成している． インスタンスタイプは <code>t2.micro</code> を選択し， <a href="https://aws.amazon.com/amazon-linux-ami/" target="_blank" rel="noreferrer">Amazon Linux</a> を OS として設定している．</p></li></ul><p>それぞれについて，もう少し詳しく説明しよう．</p><h3 id="vpc-virtual-private-cloud" tabindex="-1">VPC (Virtual Private Cloud) <a class="header-anchor" href="#vpc-virtual-private-cloud" aria-label="Permalink to &quot;VPC (Virtual Private Cloud)&quot;">​</a></h3><p><strong>VPC のアイコン.</strong></p><p><img src="`+t+`" alt="VPC"></p><p>VPC は AWS 上にプライベートな仮想ネットワーク環境を構築するツールである．高度な計算システムを構築するには，複数のサーバーを連動させて計算を行う必要があるが，そのような場合に互いのアドレスなどを管理する必要があり，そういった目的で VPC は有用である．</p><p>本ハンズオンでは，サーバーは一つしか起動しないので，VPC の恩恵はよく分からないかもしれない．しかし，EC2 インスタンスは必ず VPC の中に配置されなければならない，という制約があるので，このハンズオンでもミニマルな VPC を構成している．</p><p>興味のある読者のために，VPC のコードについてもう少し詳しく説明しよう．</p><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki solarized-dark vp-code-dark"><code><span class="line"><span style="color:#839496;">vpc </span><span style="color:#859900;">=</span><span style="color:#839496;"> ec2.Vpc(</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">self</span><span style="color:#839496;">, </span><span style="color:#2AA198;">&quot;MyFirstEc2-Vpc&quot;</span><span style="color:#839496;">,</span></span>
<span class="line"><span style="color:#839496;">    max_azs</span><span style="color:#859900;">=</span><span style="color:#D33682;">1</span><span style="color:#839496;">,</span></span>
<span class="line"><span style="color:#839496;">    cidr</span><span style="color:#859900;">=</span><span style="color:#2AA198;">&quot;10.10.0.0/23&quot;</span><span style="color:#839496;">,</span></span>
<span class="line"><span style="color:#839496;">    subnet_configuration</span><span style="color:#859900;">=</span><span style="color:#839496;">[</span></span>
<span class="line"><span style="color:#839496;">        ec2.SubnetConfiguration(</span></span>
<span class="line"><span style="color:#839496;">            name</span><span style="color:#859900;">=</span><span style="color:#2AA198;">&quot;public&quot;</span><span style="color:#839496;">,</span></span>
<span class="line"><span style="color:#839496;">            subnet_type</span><span style="color:#859900;">=</span><span style="color:#839496;">ec2.SubnetType.</span><span style="color:#CB4B16;">PUBLIC</span><span style="color:#839496;">,</span></span>
<span class="line"><span style="color:#839496;">        )</span></span>
<span class="line"><span style="color:#839496;">    ],</span></span>
<span class="line"><span style="color:#839496;">    nat_gateways</span><span style="color:#859900;">=</span><span style="color:#D33682;">0</span><span style="color:#839496;">,</span></span>
<span class="line"><span style="color:#839496;">)</span></span></code></pre><pre class="shiki solarized-light vp-code-light"><code><span class="line"><span style="color:#657B83;">vpc </span><span style="color:#859900;">=</span><span style="color:#657B83;"> ec2.Vpc(</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#268BD2;">self</span><span style="color:#657B83;">, </span><span style="color:#2AA198;">&quot;MyFirstEc2-Vpc&quot;</span><span style="color:#657B83;">,</span></span>
<span class="line"><span style="color:#657B83;">    max_azs</span><span style="color:#859900;">=</span><span style="color:#D33682;">1</span><span style="color:#657B83;">,</span></span>
<span class="line"><span style="color:#657B83;">    cidr</span><span style="color:#859900;">=</span><span style="color:#2AA198;">&quot;10.10.0.0/23&quot;</span><span style="color:#657B83;">,</span></span>
<span class="line"><span style="color:#657B83;">    subnet_configuration</span><span style="color:#859900;">=</span><span style="color:#657B83;">[</span></span>
<span class="line"><span style="color:#657B83;">        ec2.SubnetConfiguration(</span></span>
<span class="line"><span style="color:#657B83;">            name</span><span style="color:#859900;">=</span><span style="color:#2AA198;">&quot;public&quot;</span><span style="color:#657B83;">,</span></span>
<span class="line"><span style="color:#657B83;">            subnet_type</span><span style="color:#859900;">=</span><span style="color:#657B83;">ec2.SubnetType.</span><span style="color:#CB4B16;">PUBLIC</span><span style="color:#657B83;">,</span></span>
<span class="line"><span style="color:#657B83;">        )</span></span>
<span class="line"><span style="color:#657B83;">    ],</span></span>
<span class="line"><span style="color:#657B83;">    nat_gateways</span><span style="color:#859900;">=</span><span style="color:#D33682;">0</span><span style="color:#657B83;">,</span></span>
<span class="line"><span style="color:#657B83;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><ul><li><p><code>max_azs=1</code> : このパラメータは，前章で説明した avaialibility zone (AZ) を設定している． このハンズオンでは，特にデータセンターの障害などを気にする必要はないので <code>1</code> にしている．</p></li><li><p><code>cidr=&quot;10.10.0.0/23&quot;</code> : このパラメータは，VPC 内の IPv4 のレンジを指定している． CIDR 記法については， <a href="https://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing" target="_blank" rel="noreferrer">Wikipedia</a>などを参照． <code>10.10.0.0/23</code> は <code>10.10.0.0</code> から <code>10.10.1.255</code> までの 512 個の連続したアドレス範囲を指している． つまり，この VPC では最大で 512 個のユニークな IPv4 アドレスが使えることになる． 今回はサーバーは一つなので 512 個は明らかに多すぎるが，VPC はアドレスの数はどれだけ作成しても無料なので，多めに作成した．</p></li><li><p><code>subnet_configuration=...</code> : このパラメータは，VPC にどのようなサブネットを作るか，を決めている． サブネットの種類には <strong>private subnet</strong> と <strong>public subnet</strong> の二種類がある． private subnet は基本的にインターネットとは遮断されたサブネット環境である． インターネットと繋がっていないので，セキュリティは極めて高く， VPC 内のサーバーとのみ通信を行えばよい EC2 インスタンスはここに配置する． Public subnet とはインターネットに繋がったサブネットである． 本ハンズオンで作成するサーバーは，外から SSH でログインを行いたいので， Public subnet 内に配置する． より詳細な記述は <a href="https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Subnets.html#vpc-subnet-basics" target="_blank" rel="noreferrer">公式ドキュメンテーション</a> を参照．</p></li><li><p><code>natgateways=0</code> : これは少し高度な内容なので省略する (興味のある読者は <a href="https://docs.aws.amazon.com/vpc/latest/userguide/vpc-nat-gateway.html" target="_blank" rel="noreferrer">公式ドキュメンテーション</a>を参照)． が，<strong>これを 0 にしておかないと，NAT Gateway の利用料金が発生してしまうので，注意！</strong></p></li></ul><h3 id="security-group" tabindex="-1">Security Group <a class="header-anchor" href="#security-group" aria-label="Permalink to &quot;Security Group&quot;">​</a></h3><p>Security group (SG) は， EC2 インスタンスに付与することのできる仮想ファイアーウォールである． たとえば，特定の IP アドレスから来た接続を許可・拒絶したり　(インバウンド・トラフィックの制限) ，逆に特定の IP アドレスへのアクセスを禁止したり (アウトバウンド・トラフィックの制限) することができる．</p><p>コードの該当部分を見てみよう．</p><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki solarized-dark vp-code-dark"><code><span class="line"><span style="color:#839496;">sg </span><span style="color:#859900;">=</span><span style="color:#839496;"> ec2.SecurityGroup(</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">self</span><span style="color:#839496;">, </span><span style="color:#2AA198;">&quot;MyFirstEc2Vpc-Sg&quot;</span><span style="color:#839496;">,</span></span>
<span class="line"><span style="color:#839496;">    vpc</span><span style="color:#859900;">=</span><span style="color:#839496;">vpc,</span></span>
<span class="line"><span style="color:#839496;">    allow_all_outbound</span><span style="color:#859900;">=</span><span style="color:#B58900;">True</span><span style="color:#839496;">,</span></span>
<span class="line"><span style="color:#839496;">)</span></span>
<span class="line"><span style="color:#839496;">sg.add_ingress_rule(</span></span>
<span class="line"><span style="color:#839496;">    peer</span><span style="color:#859900;">=</span><span style="color:#839496;">ec2.Peer.any_ipv4(),</span></span>
<span class="line"><span style="color:#839496;">    connection</span><span style="color:#859900;">=</span><span style="color:#839496;">ec2.Port.tcp(</span><span style="color:#D33682;">22</span><span style="color:#839496;">),</span></span>
<span class="line"><span style="color:#839496;">)</span></span></code></pre><pre class="shiki solarized-light vp-code-light"><code><span class="line"><span style="color:#657B83;">sg </span><span style="color:#859900;">=</span><span style="color:#657B83;"> ec2.SecurityGroup(</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#268BD2;">self</span><span style="color:#657B83;">, </span><span style="color:#2AA198;">&quot;MyFirstEc2Vpc-Sg&quot;</span><span style="color:#657B83;">,</span></span>
<span class="line"><span style="color:#657B83;">    vpc</span><span style="color:#859900;">=</span><span style="color:#657B83;">vpc,</span></span>
<span class="line"><span style="color:#657B83;">    allow_all_outbound</span><span style="color:#859900;">=</span><span style="color:#B58900;">True</span><span style="color:#657B83;">,</span></span>
<span class="line"><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">sg.add_ingress_rule(</span></span>
<span class="line"><span style="color:#657B83;">    peer</span><span style="color:#859900;">=</span><span style="color:#657B83;">ec2.Peer.any_ipv4(),</span></span>
<span class="line"><span style="color:#657B83;">    connection</span><span style="color:#859900;">=</span><span style="color:#657B83;">ec2.Port.tcp(</span><span style="color:#D33682;">22</span><span style="color:#657B83;">),</span></span>
<span class="line"><span style="color:#657B83;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>本ハンズオンでは， SSH による外部からの接続を許容するため， <code>sg.add_ingress_rule(peer=ec2.Peer.any_ipv4(), connection=ec2.Port.tcp(22))</code> により，すべての IPv4 アドレスからのポート 22 番へのアクセスを許容している． また， SSH で EC2 インスタンスにログインしたのち，インターネットからプログラムなどをダウンロードできるよう， <code>allow_all_outbound=True</code> のパラメータを設定している．</p><p>SSH はデフォルトでは 22 番ポートを使用するのが慣例である．</p><p>セキュリティ上の観点からは，SSH の接続は自宅や大学・職場など特定の地点からの接続のみを許す方が望ましい．</p><h3 id="ec2-elastic-compute-cloud" tabindex="-1">EC2 (Elastic Compute Cloud) <a class="header-anchor" href="#ec2-elastic-compute-cloud" aria-label="Permalink to &quot;EC2 (Elastic Compute Cloud)&quot;">​</a></h3><p><strong>EC2 のアイコン.</strong></p><p><img src="`+c+`" alt="EC2"></p><p>EC2 は AWS 上に仮想サーバーを立ち上げるサービスである． 個々の起動状態にある仮想サーバーのことをインスタンス (instance) とよぶ (しかし，口語的なコミュニケーションにおいては，サーバーとインスタンスという言葉は相互互換的に用いられることが多い)．</p><p>EC2 では用途に応じて様々なインスタンスタイプが提供されている． <a href="#ec2_instance_types">table_title</a> に，代表的なインスタンスタイプの例を挙げる (執筆時点での情報)． EC2 のインスタンスタイプのすべてのリストは <a href="https://aws.amazon.com/ec2/instance-types/" target="_blank" rel="noreferrer">公式ドキュメンテーション &quot;Amazon EC2 Instance Types&quot;</a> で見ることができる．</p><h3 id="ec2-instance-types" tabindex="-1">EC2 instance types <a class="header-anchor" href="#ec2-instance-types" aria-label="Permalink to &quot;EC2 instance types&quot;">​</a></h3><table><thead><tr><th>Instance</th><th>vCPU</th><th>Memory (GiB)</th><th>Network bandwidth (Gbps)</th><th>Price per hour ($)</th></tr></thead><tbody><tr><td>t2.micro</td><td>1</td><td>1</td><td>-</td><td>0.0116</td></tr><tr><td>t2.small</td><td>1</td><td>2</td><td>-</td><td>0.023</td></tr><tr><td>t2.medium</td><td>2</td><td>4</td><td>-</td><td>0.0464</td></tr><tr><td>c5.24xlarge</td><td>96</td><td>192</td><td>25</td><td>4.08</td></tr><tr><td>c5n.18xlarge</td><td>72</td><td>192</td><td>100</td><td>3.888</td></tr><tr><td>x1e.16xlarge</td><td>64</td><td>1952</td><td>10</td><td>13.344</td></tr></tbody></table><p><a href="#ec2_instance_types">table_title</a> からわかるように， CPU は 1 コアから 96 コアまで，メモリーは 1GB から 2TB 以上まで，ネットワーク帯域は最大で 100Gbps まで，幅広く選択することができる． また，時間あたりの料金は，CPU・メモリーの占有数にほぼ比例する形で増加する． EC2 はサーバーの起動時間を秒単位で記録しており，<strong>利用料金は使用時間に比例する形で決定される</strong>． 例えば， <code>t2.medium</code> のインスタンスを 10 時間起動した場合，0.0464 * 10 = 0.464 ドルの料金が発生する．</p><p>AWS には <a href="https://aws.amazon.com/free/?all-free-tier.sort-by=item.additionalFields.SortRank&amp;all-free-tier.sort-order=asc" target="_blank" rel="noreferrer">無料利用枠</a> というものがあり， <code>t2.micro</code> であれば月に 750 時間までは無料で利用することができる．</p><p><a href="#ec2_instance_types">table_title</a> の価格は <code>us-east-1</code> のものである． リージョンによって多少価格設定が異なる．</p><p>上記で t2.micro の $0.0116 / hour という金額は， On-demand インスタンスというタイプを選択した場合の価格である． EC2 ではほかに， <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-spot-instances.html" target="_blank" rel="noreferrer">Spot instance</a> とよばれるインスタンスも存在しする． Spot instance は，AWS のデータセンターの負荷が増えた場合，ユーザーのプログラムが実行中であっても AWS の判断により強制シャットダウンされる，という不便さを抱えているのだが，その分大幅に安い料金設定になっている． AWS で一時的に生じた余剰な空き CPU をユーザーに割安で貸し出す，という発想である． 科学計算やウェブサーバーなどの用途でコストを削減する目的で， Spot Instance を活用する事例も多数報告されている．</p><p>EC2 インスタンスを定義しているコードの該当部分を見てみよう．</p><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki solarized-dark vp-code-dark"><code><span class="line"><span style="color:#839496;">host </span><span style="color:#859900;">=</span><span style="color:#839496;"> ec2.Instance(</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">self</span><span style="color:#839496;">, </span><span style="color:#2AA198;">&quot;MyFirstEc2Instance&quot;</span><span style="color:#839496;">,</span></span>
<span class="line"><span style="color:#839496;">    instance_type</span><span style="color:#859900;">=</span><span style="color:#839496;">ec2.InstanceType(</span><span style="color:#2AA198;">&quot;t2.micro&quot;</span><span style="color:#839496;">),</span></span>
<span class="line"><span style="color:#839496;">    machine_image</span><span style="color:#859900;">=</span><span style="color:#839496;">ec2.MachineImage.latest_amazon_linux(),</span></span>
<span class="line"><span style="color:#839496;">    vpc</span><span style="color:#859900;">=</span><span style="color:#839496;">vpc,</span></span>
<span class="line"><span style="color:#839496;">    vpc_subnets</span><span style="color:#859900;">=</span><span style="color:#839496;">ec2.SubnetSelection(subnet_type</span><span style="color:#859900;">=</span><span style="color:#839496;">ec2.SubnetType.</span><span style="color:#CB4B16;">PUBLIC</span><span style="color:#839496;">),</span></span>
<span class="line"><span style="color:#839496;">    security_group</span><span style="color:#859900;">=</span><span style="color:#839496;">sg,</span></span>
<span class="line"><span style="color:#839496;">    key_name</span><span style="color:#859900;">=</span><span style="color:#839496;">key_name</span></span>
<span class="line"><span style="color:#839496;">)</span></span></code></pre><pre class="shiki solarized-light vp-code-light"><code><span class="line"><span style="color:#657B83;">host </span><span style="color:#859900;">=</span><span style="color:#657B83;"> ec2.Instance(</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#268BD2;">self</span><span style="color:#657B83;">, </span><span style="color:#2AA198;">&quot;MyFirstEc2Instance&quot;</span><span style="color:#657B83;">,</span></span>
<span class="line"><span style="color:#657B83;">    instance_type</span><span style="color:#859900;">=</span><span style="color:#657B83;">ec2.InstanceType(</span><span style="color:#2AA198;">&quot;t2.micro&quot;</span><span style="color:#657B83;">),</span></span>
<span class="line"><span style="color:#657B83;">    machine_image</span><span style="color:#859900;">=</span><span style="color:#657B83;">ec2.MachineImage.latest_amazon_linux(),</span></span>
<span class="line"><span style="color:#657B83;">    vpc</span><span style="color:#859900;">=</span><span style="color:#657B83;">vpc,</span></span>
<span class="line"><span style="color:#657B83;">    vpc_subnets</span><span style="color:#859900;">=</span><span style="color:#657B83;">ec2.SubnetSelection(subnet_type</span><span style="color:#859900;">=</span><span style="color:#657B83;">ec2.SubnetType.</span><span style="color:#CB4B16;">PUBLIC</span><span style="color:#657B83;">),</span></span>
<span class="line"><span style="color:#657B83;">    security_group</span><span style="color:#859900;">=</span><span style="color:#657B83;">sg,</span></span>
<span class="line"><span style="color:#657B83;">    key_name</span><span style="color:#859900;">=</span><span style="color:#657B83;">key_name</span></span>
<span class="line"><span style="color:#657B83;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>ここでは， <code>t2.micro</code> というインスタンスタイプを選択している． さらに， <code>machine_image</code> として， <a href="https://aws.amazon.com/amazon-linux-ami/" target="_blank" rel="noreferrer">Amazon Linux</a> を選択している (Machine image は OS と似た概念である． Machine image については， <a href="#sec_jupyter_and_deep_learning">???</a> でより詳しく触れる)． さらに，上で定義した VPC, SG をこのインスタンスに付与している．</p><p>以上が，今回使用するプログラムの簡単な解説であった． ミニマルな形のプログラムではあるが，仮想サーバーを作成するのに必要なステップがおわかりいただけただろうか？</p><h2 id="プログラムを実行する" tabindex="-1">プログラムを実行する <a class="header-anchor" href="#プログラムを実行する" aria-label="Permalink to &quot;プログラムを実行する&quot;">​</a></h2><p>さて，ハンズオンのコードの理解ができたところで，プログラムを実際に実行してみよう．繰り返しになるが， <a href="#handson_01_prep">準備</a> での準備ができていることが前提である．</p><h3 id="python-の依存ライブラリのインストール" tabindex="-1">Python の依存ライブラリのインストール <a class="header-anchor" href="#python-の依存ライブラリのインストール" aria-label="Permalink to &quot;Python の依存ライブラリのインストール&quot;">​</a></h3><p>まずは，Python の依存ライブラリをインストールする．以下では，Python のライブラリを管理するツールとして， <a href="https://docs.python.org/3/library/venv.html" target="_blank" rel="noreferrer">venv</a> を使用する．</p><p>まずは， <code>handson/ec2-get-started</code> のディレクトリに移動しよう．</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki solarized-dark vp-code-dark"><code><span class="line"><span style="color:#268BD2;">$</span><span style="color:#839496;"> </span><span style="color:#2AA198;">cd</span><span style="color:#839496;"> </span><span style="color:#2AA198;">handson/ec2-get-started</span></span></code></pre><pre class="shiki solarized-light vp-code-light"><code><span class="line"><span style="color:#268BD2;">$</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">cd</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">handson/ec2-get-started</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>ディレクトリを移動したら， <code>venv</code> で新しい仮想環境を作成し，インストールを実行する．</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki solarized-dark vp-code-dark"><code><span class="line"><span style="color:#268BD2;">$</span><span style="color:#839496;"> </span><span style="color:#2AA198;">python3</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">-m</span><span style="color:#839496;"> </span><span style="color:#2AA198;">venv</span><span style="color:#839496;"> </span><span style="color:#2AA198;">.env</span></span>
<span class="line"><span style="color:#268BD2;">$</span><span style="color:#839496;"> </span><span style="color:#2AA198;">source</span><span style="color:#839496;"> </span><span style="color:#2AA198;">.env/bin/activate</span></span>
<span class="line"><span style="color:#268BD2;">$</span><span style="color:#839496;"> </span><span style="color:#2AA198;">pip</span><span style="color:#839496;"> </span><span style="color:#2AA198;">install</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">-r</span><span style="color:#839496;"> </span><span style="color:#2AA198;">requirements.txt</span></span></code></pre><pre class="shiki solarized-light vp-code-light"><code><span class="line"><span style="color:#268BD2;">$</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">python3</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">-m</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">venv</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">.env</span></span>
<span class="line"><span style="color:#268BD2;">$</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">source</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">.env/bin/activate</span></span>
<span class="line"><span style="color:#268BD2;">$</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">pip</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">install</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">-r</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">requirements.txt</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>これで Python の環境構築は完了だ．</p><p><code>venv</code> の簡単な説明は <a href="#venv_quick_guide">???</a> に記述してある．</p><p>環境によっては <code>pip</code> ではなく <code>pip3</code> あるいは <code>python3 -m pip</code> に置き換える必要がある．</p><h3 id="aws-のシークレットキーをセットする" tabindex="-1">AWS のシークレットキーをセットする <a class="header-anchor" href="#aws-のシークレットキーをセットする" aria-label="Permalink to &quot;AWS のシークレットキーをセットする&quot;">​</a></h3><p>AWS CLI および AWS CDK を使うには， AWS のシークレットキーが設定されている必要がある． シークレットキーの発行については <a href="#aws_secrets">???</a> を参照のこと． シークレットキーを発行したら， <a href="#aws_cli_install">???</a> を参照し，コマンドラインの設定を行う．</p><p>手順をここに短く要約すると，一つ目の方法は <code>AWS_ACCESS_KEY_ID</code> などの環境変数を設定するやり方である． もう一つの方法は， <code>~/.aws/credentials</code> に認証情報を保存しておく方式である． シークレットキーの設定は AWS CLI/CDK を使用するうえで共通のステップになるので，しっかりと理解しておくように．</p><h3 id="ssh-鍵を生成" tabindex="-1">SSH 鍵を生成 <a class="header-anchor" href="#ssh-鍵を生成" aria-label="Permalink to &quot;SSH 鍵を生成&quot;">​</a></h3><p>EC2 インスタンスには SSH を使ってログインする． EC2 インスタンスを作成するのに先行して，今回のハンズオンで専用に使う SSH の公開鍵・秘密鍵のペアを準備する必要がある．</p><p>次の AWS CLI コマンドにより， <code>HirakeGoma</code> という名前のついた鍵を生成する．</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki solarized-dark vp-code-dark"><code><span class="line"><span style="color:#268BD2;">$</span><span style="color:#839496;"> </span><span style="color:#2AA198;">export</span><span style="color:#839496;"> </span><span style="color:#2AA198;">KEY_NAME=&quot;HirakeGoma&quot;</span></span>
<span class="line"><span style="color:#268BD2;">$</span><span style="color:#839496;"> </span><span style="color:#2AA198;">aws</span><span style="color:#839496;"> </span><span style="color:#2AA198;">ec2</span><span style="color:#839496;"> </span><span style="color:#2AA198;">create-key-pair</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">--key-name</span><span style="color:#839496;"> </span><span style="color:#859900;">\${</span><span style="color:#268BD2;">KEY_NAME</span><span style="color:#859900;">}</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">--query</span><span style="color:#839496;"> </span><span style="color:#2AA198;">&#39;KeyMaterial&#39;</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">--output</span><span style="color:#839496;"> </span><span style="color:#2AA198;">text</span><span style="color:#839496;"> </span><span style="color:#859900;">&gt;</span><span style="color:#839496;"> </span><span style="color:#859900;">\${</span><span style="color:#268BD2;">KEY_NAME</span><span style="color:#859900;">}</span><span style="color:#2AA198;">.pem</span></span></code></pre><pre class="shiki solarized-light vp-code-light"><code><span class="line"><span style="color:#268BD2;">$</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">export</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">KEY_NAME=&quot;HirakeGoma&quot;</span></span>
<span class="line"><span style="color:#268BD2;">$</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">aws</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">ec2</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">create-key-pair</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">--key-name</span><span style="color:#657B83;"> </span><span style="color:#859900;">\${</span><span style="color:#268BD2;">KEY_NAME</span><span style="color:#859900;">}</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">--query</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">&#39;KeyMaterial&#39;</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">--output</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">text</span><span style="color:#657B83;"> </span><span style="color:#859900;">&gt;</span><span style="color:#657B83;"> </span><span style="color:#859900;">\${</span><span style="color:#268BD2;">KEY_NAME</span><span style="color:#859900;">}</span><span style="color:#2AA198;">.pem</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>このコマンドを実行すると，現在のディレクトリに <code>HirakeGoma.pem</code> というファイルが作成される．これが，サーバーにアクセスするための秘密鍵である． SSH でこの鍵を使うため， <code>~/.ssh/</code> のディレクトリに鍵を移動する． さらに，秘密鍵が書き換えられたり第三者に閲覧されないよう，ファイルのアクセス権限を <code>400</code> に設定する．</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki solarized-dark vp-code-dark"><code><span class="line"><span style="color:#268BD2;">$</span><span style="color:#839496;"> </span><span style="color:#2AA198;">mv</span><span style="color:#839496;"> </span><span style="color:#2AA198;">HirakeGoma.pem</span><span style="color:#839496;"> </span><span style="color:#2AA198;">~/.ssh/</span></span>
<span class="line"><span style="color:#268BD2;">$</span><span style="color:#839496;"> </span><span style="color:#2AA198;">chmod</span><span style="color:#839496;"> </span><span style="color:#D33682;">400</span><span style="color:#839496;"> </span><span style="color:#2AA198;">~/.ssh/HirakeGoma.pem</span></span></code></pre><pre class="shiki solarized-light vp-code-light"><code><span class="line"><span style="color:#268BD2;">$</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">mv</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">HirakeGoma.pem</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">~/.ssh/</span></span>
<span class="line"><span style="color:#268BD2;">$</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">chmod</span><span style="color:#657B83;"> </span><span style="color:#D33682;">400</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">~/.ssh/HirakeGoma.pem</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="デプロイを実行" tabindex="-1">デプロイを実行 <a class="header-anchor" href="#デプロイを実行" aria-label="Permalink to &quot;デプロイを実行&quot;">​</a></h3><p>これまでのステップで， EC2 インスタンスをデプロイするための準備が整った！ 早速，次のコマンドによりアプリケーションを AWS にデプロイしよう． <code>-c key_name=&quot;HirakeGoma&quot;</code> というオプションで，先ほど生成した <code>HirakeGoma</code> という名前の鍵を使うよう指定している．</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki solarized-dark vp-code-dark"><code><span class="line"><span style="color:#268BD2;">$</span><span style="color:#839496;"> </span><span style="color:#2AA198;">cdk</span><span style="color:#839496;"> </span><span style="color:#2AA198;">deploy</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">-c</span><span style="color:#839496;"> </span><span style="color:#2AA198;">key_name=&quot;HirakeGoma&quot;</span></span></code></pre><pre class="shiki solarized-light vp-code-light"><code><span class="line"><span style="color:#268BD2;">$</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">cdk</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">deploy</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">-c</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">key_name=&quot;HirakeGoma&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>このコマンドを実行すると， VPC， EC2 などが AWS 上に展開される． そして，コマンドの出力の最後に <a href="#handson_01_cdk_output">figure_title</a> のような出力が得られるはずである． <strong>出力の中で <code>InstancePublicIp</code> に続く数字が，起動したインスタンスのパブリック IP アドレスである．</strong> IP アドレスはデプロイごとにランダムなアドレスが割り当てられる．</p><p><img src="`+a+'" alt="CDKデプロイ実行後の出力"></p><h3 id="ssh-でログイン" tabindex="-1">SSH でログイン <a class="header-anchor" href="#ssh-でログイン" aria-label="Permalink to &quot;SSH でログイン&quot;">​</a></h3><p>早速，SSH 　で接続してみよう．</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki solarized-dark vp-code-dark"><code><span class="line"><span style="color:#268BD2;">$</span><span style="color:#839496;"> </span><span style="color:#2AA198;">ssh</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">-i</span><span style="color:#839496;"> </span><span style="color:#2AA198;">~/.ssh/HirakeGoma.pem</span><span style="color:#839496;"> </span><span style="color:#2AA198;">ec2-user@</span><span style="color:#859900;">&lt;</span><span style="color:#2AA198;">IP</span><span style="color:#839496;"> </span><span style="color:#2AA198;">addres</span><span style="color:#839496;">s</span><span style="color:#859900;">&gt;</span></span></code></pre><pre class="shiki solarized-light vp-code-light"><code><span class="line"><span style="color:#268BD2;">$</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">ssh</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">-i</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">~/.ssh/HirakeGoma.pem</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">ec2-user@</span><span style="color:#859900;">&lt;</span><span style="color:#2AA198;">IP</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">addres</span><span style="color:#657B83;">s</span><span style="color:#859900;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><code>-i</code> オプションで，先ほど生成した秘密鍵を指定している． EC2 インスタンスにはデフォルトで <code>ec2-user</code> という名前のユーザーが作られているので，それを使用する． 最後に， <code>&lt;IP address&gt;</code> の部分は自身が作成した EC2 インスタンスの IP アドレスで置き換える (<code>12.345.678.9</code> など）．</p><p>ログインに成功すると， <a href="#fig_handson_01_ssh_login">figure_title</a> のような画面が表示される． リモートのサーバーにログインしているので，プロンプトが <code>[ec2-user@ip-10-10-1-217 ~]$</code> のようになっていることを確認しよう．</p><p><img src="'+n+`" alt="SSH で EC2 インスタンスにログイン"></p><p><strong>おめでとう！これで，めでたく AWS 上に EC2 仮想サーバーを起動し，リモートからアクセスできるようになった！</strong></p><h3 id="起動した-ec2-インスタンスで遊んでみる" tabindex="-1">起動した EC2 インスタンスで遊んでみる <a class="header-anchor" href="#起動した-ec2-インスタンスで遊んでみる" aria-label="Permalink to &quot;起動した EC2 インスタンスで遊んでみる&quot;">​</a></h3><p>せっかく新しいインスタンスを起動したので，少し遊んでみよう．</p><p>ログインした EC2 インスタンスで，次のコマンドを実行してみよう． CPU の情報を取得することができる．</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki solarized-dark vp-code-dark"><code><span class="line"><span style="color:#268BD2;">$</span><span style="color:#839496;"> </span><span style="color:#2AA198;">cat</span><span style="color:#839496;"> </span><span style="color:#2AA198;">/proc/cpuinfo</span></span>
<span class="line"></span>
<span class="line"><span style="color:#268BD2;">processor</span><span style="color:#839496;">       </span><span style="color:#2AA198;">:</span><span style="color:#839496;"> </span><span style="color:#D33682;">0</span></span>
<span class="line"><span style="color:#268BD2;">vendor_id</span><span style="color:#839496;">       </span><span style="color:#2AA198;">:</span><span style="color:#839496;"> </span><span style="color:#2AA198;">GenuineIntel</span></span>
<span class="line"><span style="color:#268BD2;">cpu</span><span style="color:#839496;"> </span><span style="color:#2AA198;">family</span><span style="color:#839496;">      </span><span style="color:#2AA198;">:</span><span style="color:#839496;"> </span><span style="color:#D33682;">6</span></span>
<span class="line"><span style="color:#268BD2;">model</span><span style="color:#839496;">           </span><span style="color:#2AA198;">:</span><span style="color:#839496;"> </span><span style="color:#D33682;">63</span></span>
<span class="line"><span style="color:#268BD2;">model</span><span style="color:#839496;"> </span><span style="color:#2AA198;">name</span><span style="color:#839496;">      </span><span style="color:#2AA198;">:</span><span style="color:#839496;"> </span><span style="color:#2AA198;">Intel</span><span style="color:#839496;">(</span><span style="color:#268BD2;">R</span><span style="color:#839496;">) </span><span style="color:#2AA198;">Xeon</span><span style="color:#839496;">(</span><span style="color:#268BD2;">R</span><span style="color:#839496;">) </span><span style="color:#2AA198;">CPU</span><span style="color:#839496;"> </span><span style="color:#2AA198;">E5-2676</span><span style="color:#839496;"> </span><span style="color:#2AA198;">v3</span><span style="color:#839496;"> </span><span style="color:#2AA198;">@</span><span style="color:#839496;"> </span><span style="color:#D33682;">2.40</span><span style="color:#2AA198;">GHz</span></span>
<span class="line"><span style="color:#268BD2;">stepping</span><span style="color:#839496;">        </span><span style="color:#2AA198;">:</span><span style="color:#839496;"> </span><span style="color:#D33682;">2</span></span>
<span class="line"><span style="color:#268BD2;">microcode</span><span style="color:#839496;">       </span><span style="color:#2AA198;">:</span><span style="color:#839496;"> </span><span style="color:#D33682;">0x43</span></span>
<span class="line"><span style="color:#268BD2;">cpu</span><span style="color:#839496;"> </span><span style="color:#2AA198;">MHz</span><span style="color:#839496;">         </span><span style="color:#2AA198;">:</span><span style="color:#839496;"> </span><span style="color:#D33682;">2400.096</span></span>
<span class="line"><span style="color:#268BD2;">cache</span><span style="color:#839496;"> </span><span style="color:#2AA198;">size</span><span style="color:#839496;">      </span><span style="color:#2AA198;">:</span><span style="color:#839496;"> </span><span style="color:#D33682;">30720</span><span style="color:#839496;"> </span><span style="color:#2AA198;">KB</span></span></code></pre><pre class="shiki solarized-light vp-code-light"><code><span class="line"><span style="color:#268BD2;">$</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">cat</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">/proc/cpuinfo</span></span>
<span class="line"></span>
<span class="line"><span style="color:#268BD2;">processor</span><span style="color:#657B83;">       </span><span style="color:#2AA198;">:</span><span style="color:#657B83;"> </span><span style="color:#D33682;">0</span></span>
<span class="line"><span style="color:#268BD2;">vendor_id</span><span style="color:#657B83;">       </span><span style="color:#2AA198;">:</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">GenuineIntel</span></span>
<span class="line"><span style="color:#268BD2;">cpu</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">family</span><span style="color:#657B83;">      </span><span style="color:#2AA198;">:</span><span style="color:#657B83;"> </span><span style="color:#D33682;">6</span></span>
<span class="line"><span style="color:#268BD2;">model</span><span style="color:#657B83;">           </span><span style="color:#2AA198;">:</span><span style="color:#657B83;"> </span><span style="color:#D33682;">63</span></span>
<span class="line"><span style="color:#268BD2;">model</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">name</span><span style="color:#657B83;">      </span><span style="color:#2AA198;">:</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">Intel</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">R</span><span style="color:#657B83;">) </span><span style="color:#2AA198;">Xeon</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">R</span><span style="color:#657B83;">) </span><span style="color:#2AA198;">CPU</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">E5-2676</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">v3</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">@</span><span style="color:#657B83;"> </span><span style="color:#D33682;">2.40</span><span style="color:#2AA198;">GHz</span></span>
<span class="line"><span style="color:#268BD2;">stepping</span><span style="color:#657B83;">        </span><span style="color:#2AA198;">:</span><span style="color:#657B83;"> </span><span style="color:#D33682;">2</span></span>
<span class="line"><span style="color:#268BD2;">microcode</span><span style="color:#657B83;">       </span><span style="color:#2AA198;">:</span><span style="color:#657B83;"> </span><span style="color:#D33682;">0x43</span></span>
<span class="line"><span style="color:#268BD2;">cpu</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">MHz</span><span style="color:#657B83;">         </span><span style="color:#2AA198;">:</span><span style="color:#657B83;"> </span><span style="color:#D33682;">2400.096</span></span>
<span class="line"><span style="color:#268BD2;">cache</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">size</span><span style="color:#657B83;">      </span><span style="color:#2AA198;">:</span><span style="color:#657B83;"> </span><span style="color:#D33682;">30720</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">KB</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>次に，実行中のプロセスやメモリの消費を見てみよう．</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki solarized-dark vp-code-dark"><code><span class="line"><span style="color:#268BD2;">$</span><span style="color:#839496;">  </span><span style="color:#2AA198;">top</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">-n</span><span style="color:#839496;"> </span><span style="color:#D33682;">1</span></span>
<span class="line"></span>
<span class="line"><span style="color:#268BD2;">top</span><span style="color:#839496;"> </span><span style="color:#2AA198;">-</span><span style="color:#839496;"> </span><span style="color:#D33682;">09</span><span style="color:#2AA198;">:29:19</span><span style="color:#839496;"> </span><span style="color:#2AA198;">up</span><span style="color:#839496;"> </span><span style="color:#D33682;">43</span><span style="color:#839496;"> </span><span style="color:#2AA198;">min,</span><span style="color:#839496;">  </span><span style="color:#D33682;">1</span><span style="color:#839496;"> </span><span style="color:#2AA198;">user,</span><span style="color:#839496;">  </span><span style="color:#2AA198;">load</span><span style="color:#839496;"> </span><span style="color:#2AA198;">average:</span><span style="color:#839496;"> </span><span style="color:#D33682;">0.00</span><span style="color:#2AA198;">,</span><span style="color:#839496;"> </span><span style="color:#D33682;">0.00</span><span style="color:#2AA198;">,</span><span style="color:#839496;"> </span><span style="color:#D33682;">0.00</span></span>
<span class="line"><span style="color:#268BD2;">Tasks:</span><span style="color:#839496;">  </span><span style="color:#D33682;">76</span><span style="color:#839496;"> </span><span style="color:#2AA198;">total,</span><span style="color:#839496;">   </span><span style="color:#D33682;">1</span><span style="color:#839496;"> </span><span style="color:#2AA198;">running,</span><span style="color:#839496;">  </span><span style="color:#D33682;">51</span><span style="color:#839496;"> </span><span style="color:#2AA198;">sleeping,</span><span style="color:#839496;">   </span><span style="color:#D33682;">0</span><span style="color:#839496;"> </span><span style="color:#2AA198;">stopped,</span><span style="color:#839496;">   </span><span style="color:#D33682;">0</span><span style="color:#839496;"> </span><span style="color:#2AA198;">zombie</span></span>
<span class="line"><span style="color:#268BD2;">Cpu(s</span><span style="color:#839496;">):  0.3%us,  0.3%sy,  0.1%ni, 98.9%id,  0.2%wa,  0.0%hi,  0.0%si,  0.2%st</span></span>
<span class="line"><span style="color:#268BD2;">Mem:</span><span style="color:#839496;">   </span><span style="color:#D33682;">1009140</span><span style="color:#2AA198;">k</span><span style="color:#839496;"> </span><span style="color:#2AA198;">total,</span><span style="color:#839496;">   </span><span style="color:#D33682;">270760</span><span style="color:#2AA198;">k</span><span style="color:#839496;"> </span><span style="color:#2AA198;">used,</span><span style="color:#839496;">   </span><span style="color:#D33682;">738380</span><span style="color:#2AA198;">k</span><span style="color:#839496;"> </span><span style="color:#2AA198;">free,</span><span style="color:#839496;">    </span><span style="color:#D33682;">14340</span><span style="color:#2AA198;">k</span><span style="color:#839496;"> </span><span style="color:#2AA198;">buffers</span></span>
<span class="line"><span style="color:#268BD2;">Swap:</span><span style="color:#839496;">        </span><span style="color:#D33682;">0</span><span style="color:#2AA198;">k</span><span style="color:#839496;"> </span><span style="color:#2AA198;">total,</span><span style="color:#839496;">        </span><span style="color:#D33682;">0</span><span style="color:#2AA198;">k</span><span style="color:#839496;"> </span><span style="color:#2AA198;">used,</span><span style="color:#839496;">        </span><span style="color:#D33682;">0</span><span style="color:#2AA198;">k</span><span style="color:#839496;"> </span><span style="color:#2AA198;">free,</span><span style="color:#839496;">   </span><span style="color:#D33682;">185856</span><span style="color:#2AA198;">k</span><span style="color:#839496;"> </span><span style="color:#2AA198;">cached</span></span>
<span class="line"></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">PID</span><span style="color:#839496;"> </span><span style="color:#2AA198;">USER</span><span style="color:#839496;">      </span><span style="color:#2AA198;">PR</span><span style="color:#839496;">  </span><span style="color:#2AA198;">NI</span><span style="color:#839496;">  </span><span style="color:#2AA198;">VIRT</span><span style="color:#839496;">  </span><span style="color:#2AA198;">RES</span><span style="color:#839496;">  </span><span style="color:#2AA198;">SHR</span><span style="color:#839496;"> </span><span style="color:#2AA198;">S</span><span style="color:#839496;"> </span><span style="color:#2AA198;">%CPU</span><span style="color:#839496;"> </span><span style="color:#2AA198;">%MEM</span><span style="color:#839496;">    </span><span style="color:#2AA198;">TIME+</span><span style="color:#839496;">  </span><span style="color:#2AA198;">COMMAND</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">1</span><span style="color:#839496;"> </span><span style="color:#2AA198;">root</span><span style="color:#839496;">      </span><span style="color:#D33682;">20</span><span style="color:#839496;">   </span><span style="color:#D33682;">0</span><span style="color:#839496;"> </span><span style="color:#D33682;">19696</span><span style="color:#839496;"> </span><span style="color:#D33682;">2596</span><span style="color:#839496;"> </span><span style="color:#D33682;">2268</span><span style="color:#839496;"> </span><span style="color:#2AA198;">S</span><span style="color:#839496;">  </span><span style="color:#D33682;">0.0</span><span style="color:#839496;">  </span><span style="color:#D33682;">0.3</span><span style="color:#839496;">   </span><span style="color:#D33682;">0</span><span style="color:#2AA198;">:01.21</span><span style="color:#839496;"> </span><span style="color:#2AA198;">init</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">2</span><span style="color:#839496;"> </span><span style="color:#2AA198;">root</span><span style="color:#839496;">      </span><span style="color:#D33682;">20</span><span style="color:#839496;">   </span><span style="color:#D33682;">0</span><span style="color:#839496;">     </span><span style="color:#D33682;">0</span><span style="color:#839496;">    </span><span style="color:#D33682;">0</span><span style="color:#839496;">    </span><span style="color:#D33682;">0</span><span style="color:#839496;"> </span><span style="color:#2AA198;">S</span><span style="color:#839496;">  </span><span style="color:#D33682;">0.0</span><span style="color:#839496;">  </span><span style="color:#D33682;">0.0</span><span style="color:#839496;">   </span><span style="color:#D33682;">0</span><span style="color:#2AA198;">:00.00</span><span style="color:#839496;"> </span><span style="color:#2AA198;">kthreadd</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">3</span><span style="color:#839496;"> </span><span style="color:#2AA198;">root</span><span style="color:#839496;">      </span><span style="color:#D33682;">20</span><span style="color:#839496;">   </span><span style="color:#D33682;">0</span><span style="color:#839496;">     </span><span style="color:#D33682;">0</span><span style="color:#839496;">    </span><span style="color:#D33682;">0</span><span style="color:#839496;">    </span><span style="color:#D33682;">0</span><span style="color:#839496;"> </span><span style="color:#2AA198;">I</span><span style="color:#839496;">  </span><span style="color:#D33682;">0.0</span><span style="color:#839496;">  </span><span style="color:#D33682;">0.0</span><span style="color:#839496;">   </span><span style="color:#D33682;">0</span><span style="color:#2AA198;">:00.00</span><span style="color:#839496;"> </span><span style="color:#2AA198;">kworker/0:0</span></span></code></pre><pre class="shiki solarized-light vp-code-light"><code><span class="line"><span style="color:#268BD2;">$</span><span style="color:#657B83;">  </span><span style="color:#2AA198;">top</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">-n</span><span style="color:#657B83;"> </span><span style="color:#D33682;">1</span></span>
<span class="line"></span>
<span class="line"><span style="color:#268BD2;">top</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">-</span><span style="color:#657B83;"> </span><span style="color:#D33682;">09</span><span style="color:#2AA198;">:29:19</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">up</span><span style="color:#657B83;"> </span><span style="color:#D33682;">43</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">min,</span><span style="color:#657B83;">  </span><span style="color:#D33682;">1</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">user,</span><span style="color:#657B83;">  </span><span style="color:#2AA198;">load</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">average:</span><span style="color:#657B83;"> </span><span style="color:#D33682;">0.00</span><span style="color:#2AA198;">,</span><span style="color:#657B83;"> </span><span style="color:#D33682;">0.00</span><span style="color:#2AA198;">,</span><span style="color:#657B83;"> </span><span style="color:#D33682;">0.00</span></span>
<span class="line"><span style="color:#268BD2;">Tasks:</span><span style="color:#657B83;">  </span><span style="color:#D33682;">76</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">total,</span><span style="color:#657B83;">   </span><span style="color:#D33682;">1</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">running,</span><span style="color:#657B83;">  </span><span style="color:#D33682;">51</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">sleeping,</span><span style="color:#657B83;">   </span><span style="color:#D33682;">0</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">stopped,</span><span style="color:#657B83;">   </span><span style="color:#D33682;">0</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">zombie</span></span>
<span class="line"><span style="color:#268BD2;">Cpu(s</span><span style="color:#657B83;">):  0.3%us,  0.3%sy,  0.1%ni, 98.9%id,  0.2%wa,  0.0%hi,  0.0%si,  0.2%st</span></span>
<span class="line"><span style="color:#268BD2;">Mem:</span><span style="color:#657B83;">   </span><span style="color:#D33682;">1009140</span><span style="color:#2AA198;">k</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">total,</span><span style="color:#657B83;">   </span><span style="color:#D33682;">270760</span><span style="color:#2AA198;">k</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">used,</span><span style="color:#657B83;">   </span><span style="color:#D33682;">738380</span><span style="color:#2AA198;">k</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">free,</span><span style="color:#657B83;">    </span><span style="color:#D33682;">14340</span><span style="color:#2AA198;">k</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">buffers</span></span>
<span class="line"><span style="color:#268BD2;">Swap:</span><span style="color:#657B83;">        </span><span style="color:#D33682;">0</span><span style="color:#2AA198;">k</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">total,</span><span style="color:#657B83;">        </span><span style="color:#D33682;">0</span><span style="color:#2AA198;">k</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">used,</span><span style="color:#657B83;">        </span><span style="color:#D33682;">0</span><span style="color:#2AA198;">k</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">free,</span><span style="color:#657B83;">   </span><span style="color:#D33682;">185856</span><span style="color:#2AA198;">k</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">cached</span></span>
<span class="line"></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">PID</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">USER</span><span style="color:#657B83;">      </span><span style="color:#2AA198;">PR</span><span style="color:#657B83;">  </span><span style="color:#2AA198;">NI</span><span style="color:#657B83;">  </span><span style="color:#2AA198;">VIRT</span><span style="color:#657B83;">  </span><span style="color:#2AA198;">RES</span><span style="color:#657B83;">  </span><span style="color:#2AA198;">SHR</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">S</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">%CPU</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">%MEM</span><span style="color:#657B83;">    </span><span style="color:#2AA198;">TIME+</span><span style="color:#657B83;">  </span><span style="color:#2AA198;">COMMAND</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#268BD2;">1</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">root</span><span style="color:#657B83;">      </span><span style="color:#D33682;">20</span><span style="color:#657B83;">   </span><span style="color:#D33682;">0</span><span style="color:#657B83;"> </span><span style="color:#D33682;">19696</span><span style="color:#657B83;"> </span><span style="color:#D33682;">2596</span><span style="color:#657B83;"> </span><span style="color:#D33682;">2268</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">S</span><span style="color:#657B83;">  </span><span style="color:#D33682;">0.0</span><span style="color:#657B83;">  </span><span style="color:#D33682;">0.3</span><span style="color:#657B83;">   </span><span style="color:#D33682;">0</span><span style="color:#2AA198;">:01.21</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">init</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#268BD2;">2</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">root</span><span style="color:#657B83;">      </span><span style="color:#D33682;">20</span><span style="color:#657B83;">   </span><span style="color:#D33682;">0</span><span style="color:#657B83;">     </span><span style="color:#D33682;">0</span><span style="color:#657B83;">    </span><span style="color:#D33682;">0</span><span style="color:#657B83;">    </span><span style="color:#D33682;">0</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">S</span><span style="color:#657B83;">  </span><span style="color:#D33682;">0.0</span><span style="color:#657B83;">  </span><span style="color:#D33682;">0.0</span><span style="color:#657B83;">   </span><span style="color:#D33682;">0</span><span style="color:#2AA198;">:00.00</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">kthreadd</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#268BD2;">3</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">root</span><span style="color:#657B83;">      </span><span style="color:#D33682;">20</span><span style="color:#657B83;">   </span><span style="color:#D33682;">0</span><span style="color:#657B83;">     </span><span style="color:#D33682;">0</span><span style="color:#657B83;">    </span><span style="color:#D33682;">0</span><span style="color:#657B83;">    </span><span style="color:#D33682;">0</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">I</span><span style="color:#657B83;">  </span><span style="color:#D33682;">0.0</span><span style="color:#657B83;">  </span><span style="color:#D33682;">0.0</span><span style="color:#657B83;">   </span><span style="color:#D33682;">0</span><span style="color:#2AA198;">:00.00</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">kworker/0:0</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p><code>t2.micro</code> インスタンスなので， 1009140k = 1GB のメモリーがあることがわかる．</p><p>今回起動したインスタンスには Python 2 はインストール済みだが， Python 3 は入っていない． Python 3.6 のインストールを行ってみよう． インストールは簡単である．</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki solarized-dark vp-code-dark"><code><span class="line"><span style="color:#268BD2;">$</span><span style="color:#839496;"> </span><span style="color:#2AA198;">sudo</span><span style="color:#839496;"> </span><span style="color:#2AA198;">yum</span><span style="color:#839496;"> </span><span style="color:#2AA198;">update</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">-y</span></span>
<span class="line"><span style="color:#268BD2;">$</span><span style="color:#839496;"> </span><span style="color:#2AA198;">sudo</span><span style="color:#839496;"> </span><span style="color:#2AA198;">yum</span><span style="color:#839496;"> </span><span style="color:#2AA198;">install</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">-y</span><span style="color:#839496;"> </span><span style="color:#2AA198;">python36</span></span></code></pre><pre class="shiki solarized-light vp-code-light"><code><span class="line"><span style="color:#268BD2;">$</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">sudo</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">yum</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">update</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">-y</span></span>
<span class="line"><span style="color:#268BD2;">$</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">sudo</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">yum</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">install</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">-y</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">python36</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>インストールした Python を起動してみよう．</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki solarized-dark vp-code-dark"><code><span class="line"><span style="color:#268BD2;">$</span><span style="color:#839496;"> </span><span style="color:#2AA198;">python3</span></span>
<span class="line"><span style="color:#268BD2;">Python</span><span style="color:#839496;"> </span><span style="color:#D33682;">3.6</span><span style="color:#2AA198;">.10</span><span style="color:#839496;"> (default, </span><span style="color:#2AA198;">Feb</span><span style="color:#839496;"> </span><span style="color:#D33682;">10</span><span style="color:#839496;"> </span><span style="color:#D33682;">2020</span><span style="color:#2AA198;">,</span><span style="color:#839496;"> </span><span style="color:#D33682;">19</span><span style="color:#2AA198;">:55:14</span><span style="color:#839496;">)</span></span>
<span class="line"><span style="color:#839496;">[GCC </span><span style="color:#D33682;">4.8</span><span style="color:#839496;">.5 </span><span style="color:#D33682;">20150623</span><span style="color:#839496;"> (Red Hat </span><span style="color:#D33682;">4.8</span><span style="color:#839496;">.5-28)] on linux</span></span>
<span class="line"><span style="color:#268BD2;">Type</span><span style="color:#839496;"> </span><span style="color:#2AA198;">&quot;help&quot;,</span><span style="color:#839496;"> </span><span style="color:#2AA198;">&quot;copyright&quot;,</span><span style="color:#839496;"> </span><span style="color:#2AA198;">&quot;credits&quot;</span><span style="color:#839496;"> </span><span style="color:#2AA198;">or</span><span style="color:#839496;"> </span><span style="color:#2AA198;">&quot;license&quot;</span><span style="color:#839496;"> </span><span style="color:#2AA198;">for</span><span style="color:#839496;"> </span><span style="color:#2AA198;">more</span><span style="color:#839496;"> </span><span style="color:#2AA198;">information.</span></span>
<span class="line"><span style="color:#839496;">&gt;&gt;&gt;</span></span></code></pre><pre class="shiki solarized-light vp-code-light"><code><span class="line"><span style="color:#268BD2;">$</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">python3</span></span>
<span class="line"><span style="color:#268BD2;">Python</span><span style="color:#657B83;"> </span><span style="color:#D33682;">3.6</span><span style="color:#2AA198;">.10</span><span style="color:#657B83;"> (default, </span><span style="color:#2AA198;">Feb</span><span style="color:#657B83;"> </span><span style="color:#D33682;">10</span><span style="color:#657B83;"> </span><span style="color:#D33682;">2020</span><span style="color:#2AA198;">,</span><span style="color:#657B83;"> </span><span style="color:#D33682;">19</span><span style="color:#2AA198;">:55:14</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">[GCC </span><span style="color:#D33682;">4.8</span><span style="color:#657B83;">.5 </span><span style="color:#D33682;">20150623</span><span style="color:#657B83;"> (Red Hat </span><span style="color:#D33682;">4.8</span><span style="color:#657B83;">.5-28)] on linux</span></span>
<span class="line"><span style="color:#268BD2;">Type</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">&quot;help&quot;,</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">&quot;copyright&quot;,</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">&quot;credits&quot;</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">or</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">&quot;license&quot;</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">for</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">more</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">information.</span></span>
<span class="line"><span style="color:#657B83;">&gt;&gt;&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>Python のインタープリタが起動した！ <code>Ctrl + D</code> あるいは <code>exit()</code> と入力することで，インタープリタを閉じることができる．</p><p>さて，サーバーでのお遊びはこんなところにしておこう (興味があれば各自いろいろと試してみると良い) ． 次のコマンドでログアウトする．</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki solarized-dark vp-code-dark"><code><span class="line"><span style="color:#268BD2;">$</span><span style="color:#839496;"> </span><span style="color:#2AA198;">exit</span></span></code></pre><pre class="shiki solarized-light vp-code-light"><code><span class="line"><span style="color:#268BD2;">$</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">exit</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="aws-コンソールから確認" tabindex="-1">AWS コンソールから確認 <a class="header-anchor" href="#aws-コンソールから確認" aria-label="Permalink to &quot;AWS コンソールから確認&quot;">​</a></h3><p>これまでは，すべてコマンドラインから EC2 に関連する操作を行ってきた． EC2 インスタンスの状態を確認したり，サーバーをシャットダウンするなどの操作は，AWS コンソールから実行することもできる． 軽くこれを紹介しよう．</p><p>まず，ウェブブラウザを開いて AWS コンソールにログインする． ログインしたら， <code>Services</code> から <code>EC2</code> を検索(選択)する． 次に，左のサイドバーの <code>Instances</code> とページをたどる. すると， <a href="#aws_ec2_console">figure_title</a> のような画面が得られるはずである． この画面で，自分のアカウントの管理下にあるインスタンスを確認できる． 同様に，VPC・SG についてもコンソールから確認できる．</p><p><img src="`+p+'" alt="EC2 コンソール画面"></p><p><strong>コンソール右上で，正しいリージョン (今回の場合は ap-northeast-1, Tokyo) が選択されているか，注意する！</strong></p><p>前章で CloudFormation について触れたが，今回デプロイしたアプリケーションも，CloudFormation のスタックとして管理されている． <strong>スタック (stack)</strong> とは， AWS リソースの集合のことを指す． 今回の場合は， VPC/EC2/SG などがスタックの中に含まれている． コンソールで <code>CloudFormation</code> のページに行ってみよう (<a href="#aws_cloudformation_console">figure_title</a>)．</p><p><img src="'+l+'" alt="CloudFormation コンソール画面"></p><p>&quot;MyFirstEc2&quot; という名前のスタックがあることが確認できる． クリックをして中身を見てみると，EC2, VPC などのリソースがこのスタックに紐付いていることがわかる．</p><h3 id="スタックを削除" tabindex="-1">スタックを削除 <a class="header-anchor" href="#スタックを削除" aria-label="Permalink to &quot;スタックを削除&quot;">​</a></h3><p>これにて，第一回のハンズオンで説明すべき事柄はすべて完了した． 最後に，使わなくなったスタックを削除しよう． スタックの削除には，二つの方法がある．</p><p>一つ目の方法は，前節の Cloudformation のコンソール画面で， &quot;Delete&quot; ボタンを押すことである (<a href="#cloudformation_delete">figure_title</a>)． すると，スタックの状態が <code>&quot;DELETE_IN_PROGRESS&quot;</code> に変わり，削除が完了すると CloudFormation のスタックの一覧から消える．</p><p><img src="'+o+'" alt="CloudFormationコンソール画面から，スタックを削除"></p><p>二つ目の方法は，コマンドラインから行う方法である． 先ほど，デプロイを行ったコマンドラインに戻ろう． そうしたら，次のコマンドを実行する．</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki solarized-dark vp-code-dark"><code><span class="line"><span style="color:#268BD2;">$</span><span style="color:#839496;"> </span><span style="color:#2AA198;">cdk</span><span style="color:#839496;"> </span><span style="color:#2AA198;">destroy</span></span></code></pre><pre class="shiki solarized-light vp-code-light"><code><span class="line"><span style="color:#268BD2;">$</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">cdk</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">destroy</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>このコマンドを実行すると，スタックの削除が始まる． 削除した後は，VPC, EC2 など，すべて跡形もなく消え去っていることを自身で確かめよう． CloudFormation を用いることで関連するすべての AWS リソースを一度に管理・削除することができるので，大変便利である．</p><p><strong>スタックの削除は各自で必ず行うこと！</strong> 行わなかった場合， EC2 インスタンスの料金が発生し続けることになる！</p><p>また，本ハンズオンのために作成した SSH 鍵ペアも不要なので，削除しておく． まず， EC2 側に登録してある公開鍵を削除する． これも，コンソールおよびコマンドラインの二つの方法で実行できる．</p><p>コンソールから実行するには， <code>EC2</code> の画面に行き，左のサイドバーの <code>Key Pairs</code> を選択する． 鍵の一覧が表示されるので， <code>HirakeGoma</code> とある鍵にチェックを入れ，画面右上の <code>Actions</code> から， <code>Delete</code> を実行する (<a href="#delete_ec2_key_pair">figure_title</a>)．</p><p><img src="'+e+'" alt="EC2でSSH鍵ペアを削除"></p><p>コマンドラインから実行するには，次のコマンドを使う．</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki solarized-dark vp-code-dark"><code><span class="line"><span style="color:#268BD2;">$</span><span style="color:#839496;"> </span><span style="color:#2AA198;">aws</span><span style="color:#839496;"> </span><span style="color:#2AA198;">ec2</span><span style="color:#839496;"> </span><span style="color:#2AA198;">delete-key-pair</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">--key-name</span><span style="color:#839496;"> </span><span style="color:#2AA198;">&quot;HirakeGoma&quot;</span></span></code></pre><pre class="shiki solarized-light vp-code-light"><code><span class="line"><span style="color:#268BD2;">$</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">aws</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">ec2</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">delete-key-pair</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">--key-name</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">&quot;HirakeGoma&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>最後に，ローカルのコンピュータから鍵を削除する．</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki solarized-dark vp-code-dark"><code><span class="line"><span style="color:#268BD2;">$</span><span style="color:#839496;"> </span><span style="color:#2AA198;">rm</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">-f</span><span style="color:#839496;"> </span><span style="color:#2AA198;">~/.ssh/HirakeGoma.pem</span></span></code></pre><pre class="shiki solarized-light vp-code-light"><code><span class="line"><span style="color:#268BD2;">$</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">rm</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">-f</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">~/.ssh/HirakeGoma.pem</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>これで，クラウドの片付けもすべて終了だ．</p><p>なお，頻繁に EC2 インスタンスを起動したりする場合は，いちいち SSH 鍵を削除する必要はない．</p><h2 id="小括" tabindex="-1">小括 <a class="header-anchor" href="#小括" aria-label="Permalink to &quot;小括&quot;">​</a></h2><p>ここまでが，本書の第一部の内容である． 盛りだくさんの内容であったが，ついてこれたであろうか？</p><p><a href="#chap_cloud_basics">???</a> では，クラウドの定義と用語の説明を行ったあと，なぜクラウドを使うのか，という点を議論した． 続いて <a href="#sec_aws_general_introduction">???</a> では，クラウドを学ぶ具体的なプラットフォームとして AWS を取り上げ， AWS を使用するにあたり最低限必要な知識と用語の説明を行った． さらに， <a href="#sec_first_ec2">Hands-on #1: 初めての EC2 インスタンスを起動する</a> のハンズオンでは AWS CLI と AWS CDK を使って，自身のプライベートなサーバーを AWS 上に立ち上げる演習を行った．</p><p>これらを通じて，いかに簡単に (たった数行のコマンドで！) 仮想サーバーを立ち上げたり，削除したりすることができるか，体験できただろう． 筆者は，<a href="#chap_cloud_basics">???</a> でクラウドの最も重要な側面はダイナミックに計算リソースを拡大・縮小できることである，と述べた． この言葉の意味が，ハンズオンを通じてより明らかになっただろうか？ ここで学んだ技術を少し応用するだけで，自分のウェブページをホストする仮想サーバーを作成したり，大量のコアを搭載した EC2 インスタンスを用意して科学計算を実行するなど，いろいろなアプリケーションが実現できる．</p><p>次章からは，今回学んだクラウドの技術を基に，より現実に即した問題を解くことを体験してもらう． お楽しみに！</p>',135),B=[u];function b(m,h,g,D,v,_){return i(),y("div",null,B)}const q=r(A,[["render",b]]);export{f as __pageData,q as default};
