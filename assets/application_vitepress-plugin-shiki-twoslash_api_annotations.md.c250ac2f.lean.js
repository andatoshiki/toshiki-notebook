import{_ as d}from"./chunks/PageInfo.vue_vue_type_script_setup_true_lang.65c6b98c.js";import{_ as y,A as u,o as l,c as t,k as n,a as o,E as p,O as a,w as e}from"./chunks/framework.c989bd33.js";import"./chunks/commonjsHelpers.725317a4.js";const Fs=JSON.parse('{"title":"Meta Annotations","description":"Annotations provide a way to provide outside commentary on your code.","frontmatter":{"description":"Annotations provide a way to provide outside commentary on your code.","title":"Meta Annotations"},"headers":[],"relativePath":"application/vitepress-plugin-shiki-twoslash/api/annotations.md","filePath":"application/vitepress-plugin-shiki-twoslash/api/annotations.md","lastUpdated":1726418178000}'),c={name:"application/vitepress-plugin-shiki-twoslash/api/annotations.md"},m={class:"vp-code-group vp-adaptive-theme"},A={class:"blocks"},C={class:"language-ts vp-adaptive-theme active line-numbers-mode"},g={class:"language-ts"},D={class:"tag-container"},b={class:"shiki github-dark-dimmed twoslash lsp",style:{"background-color":"#22272e",color:"#adbac7"}},v={class:"code-container"},B={class:"line"},f={style:{color:"#ADBAC7"}},F={class:"twoslash-annotation left",style:{top:"0rem"}},E={style:{transform:"translateX(8px) translateY(27px) rotate(90deg)"},width:"40",height:"40",viewBox:"0 0 40 40",fill:"none",xmlns:"http://www.w3.org/2000/svg"},w={class:"tag-container"},q={class:"shiki github-light twoslash lsp",style:{"background-color":"#fff",color:"#24292e"}},x={class:"code-container"},k={class:"line"},M={style:{color:"#24292E"}},R={class:"twoslash-annotation left",style:{top:"0rem"}},T={style:{transform:"translateX(8px) translateY(27px) rotate(90deg)"},width:"40",height:"40",viewBox:"0 0 40 40",fill:"none",xmlns:"http://www.w3.org/2000/svg"},N={class:"vp-code-group vp-adaptive-theme"},S={class:"blocks"},X={class:"language-ts vp-adaptive-theme active line-numbers-mode"},I={class:"language-ts"},L={class:"tag-container"},P={class:"shiki github-dark-dimmed twoslash lsp",style:{"background-color":"#22272e",color:"#adbac7"}},G={class:"code-container"},O={class:"line"},V={style:{color:"#ADBAC7"}},Y={class:"twoslash-annotation right",style:{top:"3rem"}},j={style:{transform:"translateX(-10px) translateY(-10px) rotate(-50deg)"},width:"40",height:"40",viewBox:"0 0 40 40",fill:"none",xmlns:"http://www.w3.org/2000/svg"},$={class:"tag-container"},J={class:"shiki github-light twoslash lsp",style:{"background-color":"#fff",color:"#24292e"}},Q={class:"code-container"},W={class:"line"},H={style:{color:"#24292E"}},U={class:"twoslash-annotation right",style:{top:"3rem"}},z={style:{transform:"translateX(-10px) translateY(-10px) rotate(-50deg)"},width:"40",height:"40",viewBox:"0 0 40 40",fill:"none",xmlns:"http://www.w3.org/2000/svg"},K={class:"vp-code-group vp-adaptive-theme"},Z={class:"blocks"},h={class:"language-ts vp-adaptive-theme active line-numbers-mode"},_={class:"language-ts"},ss={class:"tag-container"},ns={class:"shiki github-dark-dimmed twoslash lsp",style:{"background-color":"#22272e",color:"#adbac7"}},os={class:"code-container"},as={class:"line"},ls={style:{color:"#ADBAC7"}},ts={class:"twoslash-annotation right",style:{top:"-0.7rem"}},ps={style:{transform:"translateX(8px) translateY(46px) rotate(190deg)"},width:"40",height:"40",viewBox:"0 0 40 40",fill:"none",xmlns:"http://www.w3.org/2000/svg"},rs={class:"tag-container"},es={class:"shiki github-light twoslash lsp",style:{"background-color":"#fff",color:"#24292e"}},is={class:"code-container"},ds={class:"line"},ys={style:{color:"#24292E"}},us={class:"twoslash-annotation right",style:{top:"-0.7rem"}},cs={style:{transform:"translateX(8px) translateY(46px) rotate(190deg)"},width:"40",height:"40",viewBox:"0 0 40 40",fill:"none",xmlns:"http://www.w3.org/2000/svg"};function ms(As,s,Cs,gs,Ds,bs){const i=d,r=u("data-err");return l(),t("div",null,[s[150]||(s[150]=n("h1",{id:"queries",tabindex:"-1"},[o("Queries "),n("a",{class:"header-anchor",href:"#queries","aria-label":'Permalink to "Queries"'},"​")],-1)),p(i,{readTime:"3",words:"541"}),s[151]||(s[151]=n("p",null,"Sometimes the thing you want to say is about the code, annotations provide a way to provide outside commentary on your code.",-1)),s[152]||(s[152]=n("h2",{id:"annotate-left-right-overrides-text",tabindex:"-1"},[n("code",null,"@annotate: [left|right] [overrides] - [text]"),o(),n("a",{class:"header-anchor",href:"#annotate-left-right-overrides-text","aria-label":'Permalink to "`@annotate: [left|right] [overrides] - [text]`"'},"​")],-1)),s[153]||(s[153]=n("p",null,"Annotate has a lot more controls than most of the other Twoslash commands, because each use of it probably needs to feel a bit different. Here's an example based on the TypeScript home page, click it to get it running so we can talk about what it does:",-1)),n("div",m,[s[49]||(s[49]=a('<div class="tabs"><input type="radio" name="group-TqjxC" id="tab-6MvaOnW" checked="checked"><label for="tab-6MvaOnW">output</label><input type="radio" name="group-TqjxC" id="tab-GvJr4s5"><label for="tab-GvJr4s5">markdown</label></div>',1)),n("div",A,[n("div",C,[s[45]||(s[45]=n("button",{title:"Copy Code",class:"copy"},null,-1)),s[46]||(s[46]=n("span",{class:"lang"},"ts",-1)),n("pre",null,[n("code",g,[n("div",D,[n("pre",b,[s[15]||(s[15]=n("div",{class:"language-id"},"ts",-1)),n("div",v,[n("code",null,[s[10]||(s[10]=n("div",{class:"line"},[n("span",{style:{color:"#F47067"}},"function"),n("span",{style:{color:"#ADBAC7"}}," "),n("span",{style:{color:"#DCBDFB"}},[n("data-lsp",{lsp:"function compact(arr: any): any"},"compact")]),n("span",{style:{color:"#ADBAC7"}},"("),n("span",{style:{color:"#F69D50"}},[n("data-lsp",{lsp:"(parameter) arr: any"},"arr")]),n("span",{style:{color:"#ADBAC7"}},") {")],-1)),n("div",B,[s[3]||(s[3]=n("span",{style:{color:"#ADBAC7"}},"    ",-1)),s[4]||(s[4]=n("span",{style:{color:"#F47067"}},"if",-1)),n("span",f,[s[1]||(s[1]=o(" (")),p(r,null,{default:e(()=>s[0]||(s[0]=[n("data-lsp",{lsp:"any"},"orr",-1)])),_:1}),s[2]||(s[2]=o("."))]),s[5]||(s[5]=n("span",{style:{color:"#6CB6FF"}},[n("data-lsp",{lsp:"any"},"length")],-1)),s[6]||(s[6]=a('<span style="color:#ADBAC7;"> </span><span style="color:#F47067;">&gt;</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">10</span><span style="color:#ADBAC7;">) </span><span style="color:#F47067;">return</span>',6)),s[7]||(s[7]=n("span",{style:{color:"#ADBAC7"}},[o(),n("data-lsp",{lsp:"(parameter) arr: any"},"arr"),o(".")],-1)),s[8]||(s[8]=n("span",{style:{color:"#DCBDFB"}},[n("data-lsp",{lsp:"any"},"trim")],-1)),s[9]||(s[9]=a('<span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">10</span><span style="color:#ADBAC7;">)</span>',5))]),s[11]||(s[11]=n("span",{class:"error"},[n("span",null,"Cannot find name 'orr'."),n("span",{class:"code"},"2304")],-1)),s[12]||(s[12]=n("span",{class:"error-behind"},"Cannot find name 'orr'.",-1)),s[13]||(s[13]=n("div",{class:"line"},[n("span",{style:{color:"#ADBAC7"}},"    "),n("span",{style:{color:"#F47067"}},"return"),n("span",{style:{color:"#ADBAC7"}},[o(),n("data-lsp",{lsp:"(parameter) arr: any"},"arr")])],-1)),s[14]||(s[14]=n("div",{class:"line"},[n("span",{style:{color:"#ADBAC7"}},"}")],-1))])])]),s[21]||(s[21]=o(`
`)),n("div",F,[s[17]||(s[17]=o(`
  `)),(l(),t("svg",E,s[16]||(s[16]=[o(`
    `),n("path",{d:"M1 39C1.5 32.7511 6.1 17.5173 20.5 6.57333M11.5 4.04L27 0.999998C24.8333 4.88444 20.5 13.16 20.5 15.1867",stroke:"black"},null,-1),o(`
`)]))),s[18]||(s[18]=o(`
  `)),s[19]||(s[19]=n("p",{class:"twoslash-annotation-text",style:{transform:"rotate(3deg)"}},"Discovered a typo, the param is arr, not orr!",-1)),s[20]||(s[20]=o(`
`))])]),s[44]||(s[44]=o(`
`)),n("div",w,[n("pre",q,[s[37]||(s[37]=n("div",{class:"language-id"},"ts",-1)),n("div",x,[n("code",null,[s[32]||(s[32]=n("div",{class:"line"},[n("span",{style:{color:"#D73A49"}},"function"),n("span",{style:{color:"#24292E"}}," "),n("span",{style:{color:"#6F42C1"}},[n("data-lsp",{lsp:"function compact(arr: any): any"},"compact")]),n("span",{style:{color:"#24292E"}},"("),n("span",{style:{color:"#E36209"}},[n("data-lsp",{lsp:"(parameter) arr: any"},"arr")]),n("span",{style:{color:"#24292E"}},") {")],-1)),n("div",k,[s[25]||(s[25]=n("span",{style:{color:"#24292E"}},"    ",-1)),s[26]||(s[26]=n("span",{style:{color:"#D73A49"}},"if",-1)),n("span",M,[s[23]||(s[23]=o(" (")),p(r,null,{default:e(()=>s[22]||(s[22]=[n("data-lsp",{lsp:"any"},"orr",-1)])),_:1}),s[24]||(s[24]=o("."))]),s[27]||(s[27]=n("span",{style:{color:"#005CC5"}},[n("data-lsp",{lsp:"any"},"length")],-1)),s[28]||(s[28]=a('<span style="color:#24292E;"> </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">10</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">return</span>',6)),s[29]||(s[29]=n("span",{style:{color:"#24292E"}},[o(),n("data-lsp",{lsp:"(parameter) arr: any"},"arr"),o(".")],-1)),s[30]||(s[30]=n("span",{style:{color:"#6F42C1"}},[n("data-lsp",{lsp:"any"},"trim")],-1)),s[31]||(s[31]=a('<span style="color:#24292E;">(</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">10</span><span style="color:#24292E;">)</span>',5))]),s[33]||(s[33]=n("span",{class:"error"},[n("span",null,"Cannot find name 'orr'."),n("span",{class:"code"},"2304")],-1)),s[34]||(s[34]=n("span",{class:"error-behind"},"Cannot find name 'orr'.",-1)),s[35]||(s[35]=n("div",{class:"line"},[n("span",{style:{color:"#24292E"}},"    "),n("span",{style:{color:"#D73A49"}},"return"),n("span",{style:{color:"#24292E"}},[o(),n("data-lsp",{lsp:"(parameter) arr: any"},"arr")])],-1)),s[36]||(s[36]=n("div",{class:"line"},[n("span",{style:{color:"#24292E"}},"}")],-1))])])]),s[43]||(s[43]=o(`
`)),n("div",R,[s[39]||(s[39]=o(`
  `)),(l(),t("svg",T,s[38]||(s[38]=[o(`
    `),n("path",{d:"M1 39C1.5 32.7511 6.1 17.5173 20.5 6.57333M11.5 4.04L27 0.999998C24.8333 4.88444 20.5 13.16 20.5 15.1867",stroke:"black"},null,-1),o(`
`)]))),s[40]||(s[40]=o(`
  `)),s[41]||(s[41]=n("p",{class:"twoslash-annotation-text",style:{transform:"rotate(3deg)"}},"Discovered a typo, the param is arr, not orr!",-1)),s[42]||(s[42]=o(`
`))])])])]),s[47]||(s[47]=n("div",{class:"line-numbers-wrapper","aria-hidden":"true"},[n("span",{class:"line-number"},"1"),n("br")],-1))]),s[48]||(s[48]=a(`<div class="language-md vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">md</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#ADBAC7;">\`\`\`ts twoslash</span></span>
<span class="line"><span style="color:#768390;">// @errors: 2304</span></span>
<span class="line"><span style="color:#768390;">// @strict: false</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F47067;">function</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">compact</span><span style="color:#ADBAC7;">(</span><span style="color:#F69D50;">arr</span><span style="color:#ADBAC7;">) {</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#F47067;">if</span><span style="color:#ADBAC7;"> (orr.</span><span style="color:#6CB6FF;">length</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">&gt;</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">10</span><span style="color:#ADBAC7;">) </span><span style="color:#F47067;">return</span><span style="color:#ADBAC7;"> arr.</span><span style="color:#DCBDFB;">trim</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">10</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#F47067;">return</span><span style="color:#ADBAC7;"> arr</span></span>
<span class="line"><span style="color:#ADBAC7;">}</span></span>
<span class="line"><span style="color:#768390;">// @annotate: left { &quot;arrowRot&quot;: &quot;90deg 8px 27px&quot;, &quot;textDegree&quot;: &quot;3deg&quot;, &quot;top&quot;: &quot;0rem&quot; } - Discovered a typo, the param is arr, not orr!</span></span>
<span class="line"><span style="color:#ADBAC7;">\`\`\`</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">\`\`\`ts twoslash</span></span>
<span class="line"><span style="color:#6A737D;">// @errors: 2304</span></span>
<span class="line"><span style="color:#6A737D;">// @strict: false</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">compact</span><span style="color:#24292E;">(</span><span style="color:#E36209;">arr</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (orr.</span><span style="color:#005CC5;">length</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">10</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> arr.</span><span style="color:#6F42C1;">trim</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">10</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> arr</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#6A737D;">// @annotate: left { &quot;arrowRot&quot;: &quot;90deg 8px 27px&quot;, &quot;textDegree&quot;: &quot;3deg&quot;, &quot;top&quot;: &quot;0rem&quot; } - Discovered a typo, the param is arr, not orr!</span></span>
<span class="line"><span style="color:#24292E;">\`\`\`</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div>`,1))])]),s[154]||(s[154]=a("<p>First up, cool — it adds some text to the left hand side of the code. It features quite a few different options, so lets go through them one by one:</p><ul><li><p><code>left</code> or <code>right</code>: It&#39;s currently <code>left</code>. It&#39;s worth noting the arrow flips also, and <code>90deg</code> isn&#39;t a great option. Let&#39;s look at that next.</p></li><li><p><code>{ &quot;arrrowRot&quot;: &quot;90deg 8px 27px&quot; }</code> - This JSON object is used to manipulate the annotation, you have 3 controls for arrow positioning and rotation: <code>degrees x y</code>. I recommend keeping those in degrees and px, but it&#39;s your life. These are overrides from defaults which are okay, but not really something you ever want to ship.</p></li><li><p><code>{ &quot;textDegree&quot;: &quot;3deg&quot; }</code> - Rotates the text, you probably want something between <code>-3deg</code> and <code>3deg</code>. Optional, defaults to <code>0</code>.</p></li><li><p><code>{ &quot;top&quot;: &quot;0rem&quot; }</code> - Sets the y coordinates for the annotation relative to the code sample, if it&#39;s not included then it becomes <code>[lineNum]rem</code>.</p></li></ul><p>What&#39;s not included in this sample is <code>flipped</code>, which can be used to flip the arrow&#39;s orientation. Here&#39;s some examples:</p><p>A horizontal right example:</p>",4)),n("div",N,[s[99]||(s[99]=a('<div class="tabs"><input type="radio" name="group-DBmE6" id="tab-tQTvim4" checked="checked"><label for="tab-tQTvim4">output</label><input type="radio" name="group-DBmE6" id="tab-AGcSG7X"><label for="tab-AGcSG7X">markdown</label></div>',1)),n("div",S,[n("div",X,[s[95]||(s[95]=n("button",{title:"Copy Code",class:"copy"},null,-1)),s[96]||(s[96]=n("span",{class:"lang"},"ts",-1)),n("pre",null,[n("code",I,[n("div",L,[n("pre",P,[s[65]||(s[65]=n("div",{class:"language-id"},"ts",-1)),n("div",G,[n("code",null,[s[60]||(s[60]=n("div",{class:"line"},[n("span",{style:{color:"#F47067"}},"function"),n("span",{style:{color:"#ADBAC7"}}," "),n("span",{style:{color:"#DCBDFB"}},[n("data-lsp",{lsp:"function compact(arr: any): any"},"compact")]),n("span",{style:{color:"#ADBAC7"}},"("),n("span",{style:{color:"#F69D50"}},[n("data-lsp",{lsp:"(parameter) arr: any"},"arr")]),n("span",{style:{color:"#ADBAC7"}},") {")],-1)),n("div",O,[s[53]||(s[53]=n("span",{style:{color:"#ADBAC7"}},"    ",-1)),s[54]||(s[54]=n("span",{style:{color:"#F47067"}},"if",-1)),n("span",V,[s[51]||(s[51]=o(" (")),p(r,null,{default:e(()=>s[50]||(s[50]=[n("data-lsp",{lsp:"any"},"orr",-1)])),_:1}),s[52]||(s[52]=o("."))]),s[55]||(s[55]=n("span",{style:{color:"#6CB6FF"}},[n("data-lsp",{lsp:"any"},"length")],-1)),s[56]||(s[56]=a('<span style="color:#ADBAC7;"> </span><span style="color:#F47067;">&gt;</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">10</span><span style="color:#ADBAC7;">) </span><span style="color:#F47067;">return</span>',6)),s[57]||(s[57]=n("span",{style:{color:"#ADBAC7"}},[o(),n("data-lsp",{lsp:"(parameter) arr: any"},"arr"),o(".")],-1)),s[58]||(s[58]=n("span",{style:{color:"#DCBDFB"}},[n("data-lsp",{lsp:"any"},"trim")],-1)),s[59]||(s[59]=a('<span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">10</span><span style="color:#ADBAC7;">)</span>',5))]),s[61]||(s[61]=n("span",{class:"error"},[n("span",null,"Cannot find name 'orr'."),n("span",{class:"code"},"2304")],-1)),s[62]||(s[62]=n("span",{class:"error-behind"},"Cannot find name 'orr'.",-1)),s[63]||(s[63]=n("div",{class:"line"},[n("span",{style:{color:"#ADBAC7"}},"    "),n("span",{style:{color:"#F47067"}},"return"),n("span",{style:{color:"#ADBAC7"}},[o(),n("data-lsp",{lsp:"(parameter) arr: any"},"arr")])],-1)),s[64]||(s[64]=n("div",{class:"line"},[n("span",{style:{color:"#ADBAC7"}},"}")],-1))])])]),s[71]||(s[71]=o(`
`)),n("div",Y,[s[67]||(s[67]=o(`
  `)),(l(),t("svg",j,s[66]||(s[66]=[o(`
    `),n("path",{d:"M27 39C26.5 32.7511 21.9 17.5173 7.5 6.57333M16.5 4.04L0.999999 0.999998C3.16667 4.88444 7.5 13.16 7.5 15.1867",stroke:"black"},null,-1),o(`
`)]))),s[68]||(s[68]=o(`
  `)),s[69]||(s[69]=n("p",{class:"twoslash-annotation-text",style:{transform:"rotate(0deg)"}},"Discovered a typo, the param is arr, not orr!",-1)),s[70]||(s[70]=o(`
`))])]),s[94]||(s[94]=o(`
`)),n("div",$,[n("pre",J,[s[87]||(s[87]=n("div",{class:"language-id"},"ts",-1)),n("div",Q,[n("code",null,[s[82]||(s[82]=n("div",{class:"line"},[n("span",{style:{color:"#D73A49"}},"function"),n("span",{style:{color:"#24292E"}}," "),n("span",{style:{color:"#6F42C1"}},[n("data-lsp",{lsp:"function compact(arr: any): any"},"compact")]),n("span",{style:{color:"#24292E"}},"("),n("span",{style:{color:"#E36209"}},[n("data-lsp",{lsp:"(parameter) arr: any"},"arr")]),n("span",{style:{color:"#24292E"}},") {")],-1)),n("div",W,[s[75]||(s[75]=n("span",{style:{color:"#24292E"}},"    ",-1)),s[76]||(s[76]=n("span",{style:{color:"#D73A49"}},"if",-1)),n("span",H,[s[73]||(s[73]=o(" (")),p(r,null,{default:e(()=>s[72]||(s[72]=[n("data-lsp",{lsp:"any"},"orr",-1)])),_:1}),s[74]||(s[74]=o("."))]),s[77]||(s[77]=n("span",{style:{color:"#005CC5"}},[n("data-lsp",{lsp:"any"},"length")],-1)),s[78]||(s[78]=a('<span style="color:#24292E;"> </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">10</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">return</span>',6)),s[79]||(s[79]=n("span",{style:{color:"#24292E"}},[o(),n("data-lsp",{lsp:"(parameter) arr: any"},"arr"),o(".")],-1)),s[80]||(s[80]=n("span",{style:{color:"#6F42C1"}},[n("data-lsp",{lsp:"any"},"trim")],-1)),s[81]||(s[81]=a('<span style="color:#24292E;">(</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">10</span><span style="color:#24292E;">)</span>',5))]),s[83]||(s[83]=n("span",{class:"error"},[n("span",null,"Cannot find name 'orr'."),n("span",{class:"code"},"2304")],-1)),s[84]||(s[84]=n("span",{class:"error-behind"},"Cannot find name 'orr'.",-1)),s[85]||(s[85]=n("div",{class:"line"},[n("span",{style:{color:"#24292E"}},"    "),n("span",{style:{color:"#D73A49"}},"return"),n("span",{style:{color:"#24292E"}},[o(),n("data-lsp",{lsp:"(parameter) arr: any"},"arr")])],-1)),s[86]||(s[86]=n("div",{class:"line"},[n("span",{style:{color:"#24292E"}},"}")],-1))])])]),s[93]||(s[93]=o(`
`)),n("div",U,[s[89]||(s[89]=o(`
  `)),(l(),t("svg",z,s[88]||(s[88]=[o(`
    `),n("path",{d:"M27 39C26.5 32.7511 21.9 17.5173 7.5 6.57333M16.5 4.04L0.999999 0.999998C3.16667 4.88444 7.5 13.16 7.5 15.1867",stroke:"black"},null,-1),o(`
`)]))),s[90]||(s[90]=o(`
  `)),s[91]||(s[91]=n("p",{class:"twoslash-annotation-text",style:{transform:"rotate(0deg)"}},"Discovered a typo, the param is arr, not orr!",-1)),s[92]||(s[92]=o(`
`))])])])]),s[97]||(s[97]=n("div",{class:"line-numbers-wrapper","aria-hidden":"true"},[n("span",{class:"line-number"},"1"),n("br")],-1))]),s[98]||(s[98]=a(`<div class="language-md vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">md</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#ADBAC7;">\`\`\`ts twoslash</span></span>
<span class="line"><span style="color:#768390;">// @errors: 2304</span></span>
<span class="line"><span style="color:#768390;">// @strict: false</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F47067;">function</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">compact</span><span style="color:#ADBAC7;">(</span><span style="color:#F69D50;">arr</span><span style="color:#ADBAC7;">) {</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#F47067;">if</span><span style="color:#ADBAC7;"> (orr.</span><span style="color:#6CB6FF;">length</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">&gt;</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">10</span><span style="color:#ADBAC7;">) </span><span style="color:#F47067;">return</span><span style="color:#ADBAC7;"> arr.</span><span style="color:#DCBDFB;">trim</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">10</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#F47067;">return</span><span style="color:#ADBAC7;"> arr</span></span>
<span class="line"><span style="color:#ADBAC7;">}</span></span>
<span class="line"><span style="color:#768390;">// @annotate: left { &quot;arrowRot&quot;: &quot;90deg 8px 27px&quot;, &quot;textDegree&quot;: &quot;3deg&quot;, &quot;top&quot;: &quot;0rem&quot; } - Discovered a typo, the param is arr, not orr!</span></span>
<span class="line"><span style="color:#ADBAC7;">\`\`\`</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">\`\`\`ts twoslash</span></span>
<span class="line"><span style="color:#6A737D;">// @errors: 2304</span></span>
<span class="line"><span style="color:#6A737D;">// @strict: false</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">compact</span><span style="color:#24292E;">(</span><span style="color:#E36209;">arr</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (orr.</span><span style="color:#005CC5;">length</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">10</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> arr.</span><span style="color:#6F42C1;">trim</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">10</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> arr</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#6A737D;">// @annotate: left { &quot;arrowRot&quot;: &quot;90deg 8px 27px&quot;, &quot;textDegree&quot;: &quot;3deg&quot;, &quot;top&quot;: &quot;0rem&quot; } - Discovered a typo, the param is arr, not orr!</span></span>
<span class="line"><span style="color:#24292E;">\`\`\`</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div>`,1))])]),s[155]||(s[155]=n("p",null,"Upside down arrow pointing at the error, using flipped to re-flip the arrow:",-1)),n("div",K,[s[149]||(s[149]=a('<div class="tabs"><input type="radio" name="group-eRtyo" id="tab-nPjVERo" checked="checked"><label for="tab-nPjVERo">output</label><input type="radio" name="group-eRtyo" id="tab-DNcIg45"><label for="tab-DNcIg45">markdown</label></div>',1)),n("div",Z,[n("div",h,[s[145]||(s[145]=n("button",{title:"Copy Code",class:"copy"},null,-1)),s[146]||(s[146]=n("span",{class:"lang"},"ts",-1)),n("pre",null,[n("code",_,[n("div",ss,[n("pre",ns,[s[115]||(s[115]=n("div",{class:"language-id"},"ts",-1)),n("div",os,[n("code",null,[s[110]||(s[110]=n("div",{class:"line"},[n("span",{style:{color:"#F47067"}},"function"),n("span",{style:{color:"#ADBAC7"}}," "),n("span",{style:{color:"#DCBDFB"}},[n("data-lsp",{lsp:"function compact(arr: any): any"},"compact")]),n("span",{style:{color:"#ADBAC7"}},"("),n("span",{style:{color:"#F69D50"}},[n("data-lsp",{lsp:"(parameter) arr: any"},"arr")]),n("span",{style:{color:"#ADBAC7"}},") {")],-1)),n("div",as,[s[103]||(s[103]=n("span",{style:{color:"#ADBAC7"}},"    ",-1)),s[104]||(s[104]=n("span",{style:{color:"#F47067"}},"if",-1)),n("span",ls,[s[101]||(s[101]=o(" (")),p(r,null,{default:e(()=>s[100]||(s[100]=[n("data-lsp",{lsp:"any"},"orr",-1)])),_:1}),s[102]||(s[102]=o("."))]),s[105]||(s[105]=n("span",{style:{color:"#6CB6FF"}},[n("data-lsp",{lsp:"any"},"length")],-1)),s[106]||(s[106]=a('<span style="color:#ADBAC7;"> </span><span style="color:#F47067;">&gt;</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">10</span><span style="color:#ADBAC7;">) </span><span style="color:#F47067;">return</span>',6)),s[107]||(s[107]=n("span",{style:{color:"#ADBAC7"}},[o(),n("data-lsp",{lsp:"(parameter) arr: any"},"arr"),o(".")],-1)),s[108]||(s[108]=n("span",{style:{color:"#DCBDFB"}},[n("data-lsp",{lsp:"any"},"trim")],-1)),s[109]||(s[109]=a('<span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">10</span><span style="color:#ADBAC7;">)</span>',5))]),s[111]||(s[111]=n("span",{class:"error"},[n("span",null,"Cannot find name 'orr'."),n("span",{class:"code"},"2304")],-1)),s[112]||(s[112]=n("span",{class:"error-behind"},"Cannot find name 'orr'.",-1)),s[113]||(s[113]=n("div",{class:"line"},[n("span",{style:{color:"#ADBAC7"}},"    "),n("span",{style:{color:"#F47067"}},"return"),n("span",{style:{color:"#ADBAC7"}},[o(),n("data-lsp",{lsp:"(parameter) arr: any"},"arr")])],-1)),s[114]||(s[114]=n("div",{class:"line"},[n("span",{style:{color:"#ADBAC7"}},"}")],-1))])])]),s[121]||(s[121]=o(`
`)),n("div",ts,[s[117]||(s[117]=o(`
  `)),(l(),t("svg",ps,s[116]||(s[116]=[o(`
    `),n("path",{d:"M1 39C1.5 32.7511 6.1 17.5173 20.5 6.57333M11.5 4.04L27 0.999998C24.8333 4.88444 20.5 13.16 20.5 15.1867",stroke:"black"},null,-1),o(`
`)]))),s[118]||(s[118]=o(`
  `)),s[119]||(s[119]=n("p",{class:"twoslash-annotation-text",style:{transform:"rotate(-3deg)"}},"Discovered a typo, the param is arr, not orr!",-1)),s[120]||(s[120]=o(`
`))])]),s[144]||(s[144]=o(`
`)),n("div",rs,[n("pre",es,[s[137]||(s[137]=n("div",{class:"language-id"},"ts",-1)),n("div",is,[n("code",null,[s[132]||(s[132]=n("div",{class:"line"},[n("span",{style:{color:"#D73A49"}},"function"),n("span",{style:{color:"#24292E"}}," "),n("span",{style:{color:"#6F42C1"}},[n("data-lsp",{lsp:"function compact(arr: any): any"},"compact")]),n("span",{style:{color:"#24292E"}},"("),n("span",{style:{color:"#E36209"}},[n("data-lsp",{lsp:"(parameter) arr: any"},"arr")]),n("span",{style:{color:"#24292E"}},") {")],-1)),n("div",ds,[s[125]||(s[125]=n("span",{style:{color:"#24292E"}},"    ",-1)),s[126]||(s[126]=n("span",{style:{color:"#D73A49"}},"if",-1)),n("span",ys,[s[123]||(s[123]=o(" (")),p(r,null,{default:e(()=>s[122]||(s[122]=[n("data-lsp",{lsp:"any"},"orr",-1)])),_:1}),s[124]||(s[124]=o("."))]),s[127]||(s[127]=n("span",{style:{color:"#005CC5"}},[n("data-lsp",{lsp:"any"},"length")],-1)),s[128]||(s[128]=a('<span style="color:#24292E;"> </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">10</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">return</span>',6)),s[129]||(s[129]=n("span",{style:{color:"#24292E"}},[o(),n("data-lsp",{lsp:"(parameter) arr: any"},"arr"),o(".")],-1)),s[130]||(s[130]=n("span",{style:{color:"#6F42C1"}},[n("data-lsp",{lsp:"any"},"trim")],-1)),s[131]||(s[131]=a('<span style="color:#24292E;">(</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">10</span><span style="color:#24292E;">)</span>',5))]),s[133]||(s[133]=n("span",{class:"error"},[n("span",null,"Cannot find name 'orr'."),n("span",{class:"code"},"2304")],-1)),s[134]||(s[134]=n("span",{class:"error-behind"},"Cannot find name 'orr'.",-1)),s[135]||(s[135]=n("div",{class:"line"},[n("span",{style:{color:"#24292E"}},"    "),n("span",{style:{color:"#D73A49"}},"return"),n("span",{style:{color:"#24292E"}},[o(),n("data-lsp",{lsp:"(parameter) arr: any"},"arr")])],-1)),s[136]||(s[136]=n("div",{class:"line"},[n("span",{style:{color:"#24292E"}},"}")],-1))])])]),s[143]||(s[143]=o(`
`)),n("div",us,[s[139]||(s[139]=o(`
  `)),(l(),t("svg",cs,s[138]||(s[138]=[o(`
    `),n("path",{d:"M1 39C1.5 32.7511 6.1 17.5173 20.5 6.57333M11.5 4.04L27 0.999998C24.8333 4.88444 20.5 13.16 20.5 15.1867",stroke:"black"},null,-1),o(`
`)]))),s[140]||(s[140]=o(`
  `)),s[141]||(s[141]=n("p",{class:"twoslash-annotation-text",style:{transform:"rotate(-3deg)"}},"Discovered a typo, the param is arr, not orr!",-1)),s[142]||(s[142]=o(`
`))])])])]),s[147]||(s[147]=n("div",{class:"line-numbers-wrapper","aria-hidden":"true"},[n("span",{class:"line-number"},"1"),n("br")],-1))]),s[148]||(s[148]=a(`<div class="language-md vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">md</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#ADBAC7;">\`\`\`ts twoslash</span></span>
<span class="line"><span style="color:#768390;">// @errors: 2304</span></span>
<span class="line"><span style="color:#768390;">// @strict: false</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F47067;">function</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">compact</span><span style="color:#ADBAC7;">(</span><span style="color:#F69D50;">arr</span><span style="color:#ADBAC7;">) {</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#F47067;">if</span><span style="color:#ADBAC7;"> (orr.</span><span style="color:#6CB6FF;">length</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">&gt;</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">10</span><span style="color:#ADBAC7;">) </span><span style="color:#F47067;">return</span><span style="color:#ADBAC7;"> arr.</span><span style="color:#DCBDFB;">trim</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">10</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#F47067;">return</span><span style="color:#ADBAC7;"> arr</span></span>
<span class="line"><span style="color:#ADBAC7;">}</span></span>
<span class="line"><span style="color:#768390;">// @annotate: left { &quot;arrowRot&quot;: &quot;90deg 8px 27px&quot;, &quot;textDegree&quot;: &quot;3deg&quot;, &quot;top&quot;: &quot;0rem&quot; } - Discovered a typo, the param is arr, not orr!</span></span>
<span class="line"><span style="color:#ADBAC7;">\`\`\`</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">\`\`\`ts twoslash</span></span>
<span class="line"><span style="color:#6A737D;">// @errors: 2304</span></span>
<span class="line"><span style="color:#6A737D;">// @strict: false</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">compact</span><span style="color:#24292E;">(</span><span style="color:#E36209;">arr</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (orr.</span><span style="color:#005CC5;">length</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">10</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> arr.</span><span style="color:#6F42C1;">trim</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">10</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> arr</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#6A737D;">// @annotate: left { &quot;arrowRot&quot;: &quot;90deg 8px 27px&quot;, &quot;textDegree&quot;: &quot;3deg&quot;, &quot;top&quot;: &quot;0rem&quot; } - Discovered a typo, the param is arr, not orr!</span></span>
<span class="line"><span style="color:#24292E;">\`\`\`</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div>`,1))])])])}const Es=y(c,[["render",ms]]);export{Fs as __pageData,Es as default};
