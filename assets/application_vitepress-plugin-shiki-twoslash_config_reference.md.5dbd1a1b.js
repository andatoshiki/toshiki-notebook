import{_ as l}from"./chunks/PageInfo.vue_vue_type_script_setup_true_lang.250b3e56.js";import{_ as e,o,c as p,H as t,k as s,a,Q as c}from"./chunks/framework.b7580407.js";import"./chunks/commonjsHelpers.725317a4.js";const E=JSON.parse('{"title":"Config","description":"You can configure Twoslash to change code example output.","frontmatter":{"description":"You can configure Twoslash to change code example output.","title":"Config"},"headers":[],"relativePath":"application/vitepress-plugin-shiki-twoslash/config/reference.md","filePath":"application/vitepress-plugin-shiki-twoslash/config/reference.md","lastUpdated":1713291312000}'),i={name:"application/vitepress-plugin-shiki-twoslash/config/reference.md"},r=s("h1",{id:"config",tabindex:"-1"},[a("Config "),s("a",{class:"header-anchor",href:"#config","aria-label":'Permalink to "Config"'},"​")],-1),d=s("h2",{id:"overview",tabindex:"-1"},[a("Overview "),s("a",{class:"header-anchor",href:"#overview","aria-label":'Permalink to "Overview"'},"​")],-1),y=s("p",null,[a("You can configure VitePress Twoslash using the "),s("code",null,"twoslash"),a(" property added to "),s("code",null,"defineConfig"),a(".")],-1),h=s("div",{class:"language-ts vp-adaptive-theme line-numbers-mode"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"ts"),s("pre",{class:"shiki github-dark-dimmed twoslash lsp",style:{"background-color":"#22272e",color:"#adbac7"}},[s("div",{class:"language-id"},"ts"),s("div",{class:"code-container"},[s("code",null,[s("div",{class:"line"},[s("span",{style:{color:"#768390"}},"// .vitepress/config.[ext]")]),s("div",{class:"line"},[s("span",{style:{color:"#F47067"}},"import"),s("span",{style:{color:"#ADBAC7"}},[a(" { "),s("data-lsp",{lsp:`(alias) function defineConfig(config: UserConfig<DefaultTheme.Config>): UserConfig<DefaultTheme.Config>
import defineConfig`},"defineConfig"),a(" } ")]),s("span",{style:{color:"#F47067"}},"from"),s("span",{style:{color:"#ADBAC7"}}," "),s("span",{style:{color:"#96D0FF"}},"'vitepress'")]),s("div",{class:"line"},[s("span",{style:{color:"#F47067"}},"import"),s("span",{style:{color:"#ADBAC7"}},[a(" { "),s("data-lsp",{lsp:`(alias) function withTwoslash(config: UserConfig<DefaultTheme.Config>): Promise<UserConfig<DefaultTheme.Config>>
import withTwoslash`},"withTwoslash"),a(", "),s("data-lsp",{lsp:`(alias) type TwoslashConfigSettings = any
import TwoslashConfigSettings`},"TwoslashConfigSettings"),a(" } ")]),s("span",{style:{color:"#F47067"}},"from"),s("span",{style:{color:"#ADBAC7"}}," "),s("span",{style:{color:"#96D0FF"}},"'@andatoshiki/vitepress-plugin-shiki-twoslash'")]),s("div",{class:"line"}," "),s("div",{class:"line"},[s("span",{style:{color:"#F47067"}},"export"),s("span",{style:{color:"#F69D50"}}," "),s("span",{style:{color:"#F47067"}},"default"),s("span",{style:{color:"#F69D50"}}," "),s("span",{style:{color:"#DCBDFB"}},[s("data-lsp",{lsp:`(alias) withTwoslash(config: UserConfig<DefaultTheme.Config>): Promise<UserConfig<DefaultTheme.Config>>
import withTwoslash`},"withTwoslash")]),s("span",{style:{color:"#F69D50"}},"(")]),s("div",{class:"line"},[s("span",{style:{color:"#F69D50"}},"    "),s("span",{style:{color:"#DCBDFB"}},[s("data-lsp",{lsp:`(alias) defineConfig(config: UserConfig<DefaultTheme.Config>): UserConfig<DefaultTheme.Config>
import defineConfig`},"defineConfig")]),s("span",{style:{color:"#F69D50"}},"({")]),s("div",{class:"line"},[s("span",{style:{color:"#F69D50"}},"        "),s("span",{style:{color:"#ADBAC7"}},[s("data-lsp",{lsp:"(property) UserConfig<DefaultTheme.Config>.twoslash?: any"},"twoslash"),a(": {")])]),s("div",{class:"line"},[s("span",{style:{color:"#ADBAC7"}},"            "),s("span",{style:{color:"#768390"}},"// Your VitePress Twoslash options")]),s("div",{class:"line"},[s("span",{style:{color:"#ADBAC7"}},"        }"),s("span",{style:{color:"#F69D50"}},",")]),s("div",{class:"line"},[s("span",{style:{color:"#F69D50"}},"    })")]),s("div",{class:"line"},[s("span",{style:{color:"#F69D50"}},")")])])])]),s("pre",{class:"shiki github-light twoslash lsp",style:{"background-color":"#fff",color:"#24292e"}},[s("div",{class:"language-id"},"ts"),s("div",{class:"code-container"},[s("code",null,[s("div",{class:"line"},[s("span",{style:{color:"#6A737D"}},"// .vitepress/config.[ext]")]),s("div",{class:"line"},[s("span",{style:{color:"#D73A49"}},"import"),s("span",{style:{color:"#24292E"}},[a(" { "),s("data-lsp",{lsp:`(alias) function defineConfig(config: UserConfig<DefaultTheme.Config>): UserConfig<DefaultTheme.Config>
import defineConfig`},"defineConfig"),a(" } ")]),s("span",{style:{color:"#D73A49"}},"from"),s("span",{style:{color:"#24292E"}}," "),s("span",{style:{color:"#032F62"}},"'vitepress'")]),s("div",{class:"line"},[s("span",{style:{color:"#D73A49"}},"import"),s("span",{style:{color:"#24292E"}},[a(" { "),s("data-lsp",{lsp:`(alias) function withTwoslash(config: UserConfig<DefaultTheme.Config>): Promise<UserConfig<DefaultTheme.Config>>
import withTwoslash`},"withTwoslash"),a(", "),s("data-lsp",{lsp:`(alias) type TwoslashConfigSettings = any
import TwoslashConfigSettings`},"TwoslashConfigSettings"),a(" } ")]),s("span",{style:{color:"#D73A49"}},"from"),s("span",{style:{color:"#24292E"}}," "),s("span",{style:{color:"#032F62"}},"'@andatoshiki/vitepress-plugin-shiki-twoslash'")]),s("div",{class:"line"}," "),s("div",{class:"line"},[s("span",{style:{color:"#D73A49"}},"export"),s("span",{style:{color:"#24292E"}}," "),s("span",{style:{color:"#D73A49"}},"default"),s("span",{style:{color:"#24292E"}}," "),s("span",{style:{color:"#6F42C1"}},[s("data-lsp",{lsp:`(alias) withTwoslash(config: UserConfig<DefaultTheme.Config>): Promise<UserConfig<DefaultTheme.Config>>
import withTwoslash`},"withTwoslash")]),s("span",{style:{color:"#24292E"}},"(")]),s("div",{class:"line"},[s("span",{style:{color:"#24292E"}},"    "),s("span",{style:{color:"#6F42C1"}},[s("data-lsp",{lsp:`(alias) defineConfig(config: UserConfig<DefaultTheme.Config>): UserConfig<DefaultTheme.Config>
import defineConfig`},"defineConfig")]),s("span",{style:{color:"#24292E"}},"({")]),s("div",{class:"line"},[s("span",{style:{color:"#24292E"}},[a("        "),s("data-lsp",{lsp:"(property) UserConfig<DefaultTheme.Config>.twoslash?: any"},"twoslash"),a(": {")])]),s("div",{class:"line"},[s("span",{style:{color:"#24292E"}},"            "),s("span",{style:{color:"#6A737D"}},"// Your VitePress Twoslash options")]),s("div",{class:"line"},[s("span",{style:{color:"#24292E"}},"        },")]),s("div",{class:"line"},[s("span",{style:{color:"#24292E"}},"    })")]),s("div",{class:"line"},[s("span",{style:{color:"#24292E"}},")")])])])]),s("div",{class:"line-numbers-wrapper","aria-hidden":"true"},[s("span",{class:"line-number"},"1"),s("br")])],-1),u=c(`<div class="info custom-block"><p class="custom-block-title">INFO</p><p>In addition to the below config options, VitePress Twoslash also supports all <a href="https://github.com/shikijs/shiki" target="_blank" rel="noreferrer"><code>shiki</code></a> <code>HighlighterOptions</code> and <a href="https://github.com/microsoft/TypeScript-Website/tree/v2/packages/ts-twoslasher" target="_blank" rel="noreferrer"><code>@typescript/twoslash</code></a> <code>TwoSlashOptions</code>.</p></div><h2 id="options" tabindex="-1">Options <a class="header-anchor" href="#options" aria-label="Permalink to &quot;Options&quot;">​</a></h2><h3 id="addtrybutton" tabindex="-1"><code>addTryButton</code> <a class="header-anchor" href="#addtrybutton" aria-label="Permalink to &quot;\`addTryButton\`&quot;">​</a></h3><p>A way to turn on the try buttons seen on the TS website.</p><ul><li><strong>Type</strong>: <code>boolean</code></li><li><strong>Default</strong>: <code>false</code></li></ul><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark-dimmed has-focused-lines vp-code-dark"><code><span class="line"><span style="color:#F47067;">export</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">default</span><span style="color:#F69D50;"> </span><span style="color:#DCBDFB;">withTwoslash</span><span style="color:#F69D50;">(</span></span>
<span class="line"><span style="color:#F69D50;">    </span><span style="color:#DCBDFB;">defineConfig</span><span style="color:#F69D50;">({</span></span>
<span class="line"><span style="color:#F69D50;">        </span><span style="color:#ADBAC7;">twoslash: {</span></span>
<span class="line has-focus"><span style="color:#ADBAC7;">            addTryButton: </span><span style="color:#6CB6FF;">true</span><span style="color:#ADBAC7;">, </span></span>
<span class="line"><span style="color:#ADBAC7;">        }</span><span style="color:#F69D50;">,</span></span>
<span class="line"><span style="color:#F69D50;">    })</span></span>
<span class="line"><span style="color:#F69D50;">)</span></span></code></pre><pre class="shiki github-light has-focused-lines vp-code-light"><code><span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">default</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">withTwoslash</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">defineConfig</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">        twoslash: {</span></span>
<span class="line has-focus"><span style="color:#24292E;">            addTryButton: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">, </span></span>
<span class="line"><span style="color:#24292E;">        },</span></span>
<span class="line"><span style="color:#24292E;">    })</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="alwayraisefortwoslashexceptions" tabindex="-1"><code>alwayRaiseForTwoslashExceptions</code> <a class="header-anchor" href="#alwayraisefortwoslashexceptions" aria-label="Permalink to &quot;\`alwayRaiseForTwoslashExceptions\`&quot;">​</a></h3><p>Instead of showing twoslash exceptions inline, throw the entire process like it will on CI.</p><ul><li><strong>Type</strong>: <code>boolean</code></li><li><strong>Default</strong>: <code>false</code></li></ul><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark-dimmed has-focused-lines vp-code-dark"><code><span class="line"><span style="color:#F47067;">export</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">default</span><span style="color:#F69D50;"> </span><span style="color:#DCBDFB;">withTwoslash</span><span style="color:#F69D50;">(</span></span>
<span class="line"><span style="color:#F69D50;">    </span><span style="color:#DCBDFB;">defineConfig</span><span style="color:#F69D50;">({</span></span>
<span class="line"><span style="color:#F69D50;">        </span><span style="color:#ADBAC7;">twoslash: {</span></span>
<span class="line has-focus"><span style="color:#ADBAC7;">            alwayRaiseForTwoslashExceptions: </span><span style="color:#6CB6FF;">true</span><span style="color:#ADBAC7;">, </span></span>
<span class="line"><span style="color:#ADBAC7;">        }</span><span style="color:#F69D50;">,</span></span>
<span class="line"><span style="color:#F69D50;">    })</span></span>
<span class="line"><span style="color:#F69D50;">)</span></span></code></pre><pre class="shiki github-light has-focused-lines vp-code-light"><code><span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">default</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">withTwoslash</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">defineConfig</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">        twoslash: {</span></span>
<span class="line has-focus"><span style="color:#24292E;">            alwayRaiseForTwoslashExceptions: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">, </span></span>
<span class="line"><span style="color:#24292E;">        },</span></span>
<span class="line"><span style="color:#24292E;">    })</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="disableimplicitreactimport" tabindex="-1"><code>disableImplicitReactImport</code> <a class="header-anchor" href="#disableimplicitreactimport" aria-label="Permalink to &quot;\`disableImplicitReactImport\`&quot;">​</a></h3><p>A way to disable implicit React imports on tsx/jsx language codeblocks</p><ul><li><strong>Type</strong>: <code>boolean</code></li><li><strong>Default</strong>: <code>false</code></li></ul><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark-dimmed has-focused-lines vp-code-dark"><code><span class="line"><span style="color:#F47067;">export</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">default</span><span style="color:#F69D50;"> </span><span style="color:#DCBDFB;">withTwoslash</span><span style="color:#F69D50;">(</span></span>
<span class="line"><span style="color:#F69D50;">    </span><span style="color:#DCBDFB;">defineConfig</span><span style="color:#F69D50;">({</span></span>
<span class="line"><span style="color:#F69D50;">        </span><span style="color:#ADBAC7;">twoslash: {</span></span>
<span class="line has-focus"><span style="color:#ADBAC7;">            disableImplicitReactImport: </span><span style="color:#6CB6FF;">true</span><span style="color:#ADBAC7;">, </span></span>
<span class="line"><span style="color:#ADBAC7;">        }</span><span style="color:#F69D50;">,</span></span>
<span class="line"><span style="color:#F69D50;">    })</span></span>
<span class="line"><span style="color:#F69D50;">)</span></span></code></pre><pre class="shiki github-light has-focused-lines vp-code-light"><code><span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">default</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">withTwoslash</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">defineConfig</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">        twoslash: {</span></span>
<span class="line has-focus"><span style="color:#24292E;">            disableImplicitReactImport: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">, </span></span>
<span class="line"><span style="color:#24292E;">        },</span></span>
<span class="line"><span style="color:#24292E;">    })</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="includejsdocinhover" tabindex="-1"><code>includeJSDocInHover</code> <a class="header-anchor" href="#includejsdocinhover" aria-label="Permalink to &quot;\`includeJSDocInHover\`&quot;">​</a></h3><p>Include JSDoc comments in the hovers.</p><ul><li><strong>Type</strong>: <code>boolean</code></li><li><strong>Default</strong>: <code>false</code></li></ul><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark-dimmed has-focused-lines vp-code-dark"><code><span class="line"><span style="color:#F47067;">export</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">default</span><span style="color:#F69D50;"> </span><span style="color:#DCBDFB;">withTwoslash</span><span style="color:#F69D50;">(</span></span>
<span class="line"><span style="color:#F69D50;">    </span><span style="color:#DCBDFB;">defineConfig</span><span style="color:#F69D50;">({</span></span>
<span class="line"><span style="color:#F69D50;">        </span><span style="color:#ADBAC7;">twoslash: {</span></span>
<span class="line has-focus"><span style="color:#ADBAC7;">            includeJSDocInHover: </span><span style="color:#6CB6FF;">true</span><span style="color:#ADBAC7;">, </span></span>
<span class="line"><span style="color:#ADBAC7;">        }</span><span style="color:#F69D50;">,</span></span>
<span class="line"><span style="color:#F69D50;">    })</span></span>
<span class="line"><span style="color:#F69D50;">)</span></span></code></pre><pre class="shiki github-light has-focused-lines vp-code-light"><code><span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">default</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">withTwoslash</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">defineConfig</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">        twoslash: {</span></span>
<span class="line has-focus"><span style="color:#24292E;">            includeJSDocInHover: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">, </span></span>
<span class="line"><span style="color:#24292E;">        },</span></span>
<span class="line"><span style="color:#24292E;">    })</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="ignorecodeblockswithcodefencemeta" tabindex="-1"><code>ignoreCodeblocksWithCodefenceMeta</code> <a class="header-anchor" href="#ignorecodeblockswithcodefencemeta" aria-label="Permalink to &quot;\`ignoreCodeblocksWithCodefenceMeta\`&quot;">​</a></h3><p>Ignore transforming certain code blocks.</p><ul><li><strong>Type</strong>: <code>boolean</code></li><li><strong>Default</strong>: <code>false</code></li></ul><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark-dimmed has-focused-lines vp-code-dark"><code><span class="line"><span style="color:#F47067;">export</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">default</span><span style="color:#F69D50;"> </span><span style="color:#DCBDFB;">withTwoslash</span><span style="color:#F69D50;">(</span></span>
<span class="line"><span style="color:#F69D50;">    </span><span style="color:#DCBDFB;">defineConfig</span><span style="color:#F69D50;">({</span></span>
<span class="line"><span style="color:#F69D50;">        </span><span style="color:#ADBAC7;">twoslash: {</span></span>
<span class="line has-focus"><span style="color:#ADBAC7;">            ignoreCodeblocksWithCodefenceMeta: </span><span style="color:#6CB6FF;">true</span><span style="color:#ADBAC7;">, </span></span>
<span class="line"><span style="color:#ADBAC7;">        }</span><span style="color:#F69D50;">,</span></span>
<span class="line"><span style="color:#F69D50;">    })</span></span>
<span class="line"><span style="color:#F69D50;">)</span></span></code></pre><pre class="shiki github-light has-focused-lines vp-code-light"><code><span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">default</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">withTwoslash</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">defineConfig</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">        twoslash: {</span></span>
<span class="line has-focus"><span style="color:#24292E;">            ignoreCodeblocksWithCodefenceMeta: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">, </span></span>
<span class="line"><span style="color:#24292E;">        },</span></span>
<span class="line"><span style="color:#24292E;">    })</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="wrapfragments" tabindex="-1"><code>wrapFragments</code> <a class="header-anchor" href="#wrapfragments" aria-label="Permalink to &quot;\`wrapFragments\`&quot;">​</a></h3><p>A way to add a div wrapper for multi-theme outputs.</p><ul><li><strong>Type</strong>: <code>boolean</code></li><li><strong>Default</strong>: <code>false</code></li></ul><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark-dimmed has-focused-lines vp-code-dark"><code><span class="line"><span style="color:#F47067;">export</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">default</span><span style="color:#F69D50;"> </span><span style="color:#DCBDFB;">withTwoslash</span><span style="color:#F69D50;">(</span></span>
<span class="line"><span style="color:#F69D50;">    </span><span style="color:#DCBDFB;">defineConfig</span><span style="color:#F69D50;">({</span></span>
<span class="line"><span style="color:#F69D50;">        </span><span style="color:#ADBAC7;">twoslash: {</span></span>
<span class="line has-focus"><span style="color:#ADBAC7;">            wrapFragments: </span><span style="color:#6CB6FF;">true</span><span style="color:#ADBAC7;">, </span></span>
<span class="line"><span style="color:#ADBAC7;">        }</span><span style="color:#F69D50;">,</span></span>
<span class="line"><span style="color:#F69D50;">    })</span></span>
<span class="line"><span style="color:#F69D50;">)</span></span></code></pre><pre class="shiki github-light has-focused-lines vp-code-light"><code><span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">default</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">withTwoslash</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">defineConfig</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">        twoslash: {</span></span>
<span class="line has-focus"><span style="color:#24292E;">            wrapFragments: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">, </span></span>
<span class="line"><span style="color:#24292E;">        },</span></span>
<span class="line"><span style="color:#24292E;">    })</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div>`,26);function f(g,m,b,D,C,F){const n=l;return o(),p("div",null,[r,t(n,{readTime:"1",words:"248"}),d,y,h,u])}const T=e(i,[["render",f]]);export{E as __pageData,T as default};
