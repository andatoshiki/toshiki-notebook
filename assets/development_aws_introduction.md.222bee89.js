import{_ as a}from"./chunks/earth_from_earth.8c108f53.js";import{_ as e,c as t,o,R as r}from"./chunks/framework.a1bac067.js";const S=JSON.parse('{"title":"はじめに","description":"","frontmatter":{},"headers":[],"relativePath":"development/aws/introduction.md","filePath":"development/aws/introduction.md","lastUpdated":1684858945000}'),s={name:"development/aws/introduction.md"},l=r('<h1 id="はじめに" tabindex="-1">はじめに <a class="header-anchor" href="#はじめに" aria-label="Permalink to &quot;はじめに&quot;">​</a></h1><h2 id="本書の目的・内容" tabindex="-1">本書の目的・内容 <a class="header-anchor" href="#本書の目的・内容" aria-label="Permalink to &quot;本書の目的・内容&quot;">​</a></h2><p>本書は，東京大学計数工学科で 2021 年度 S1/S2 タームに開講されている&quot;システム情報工学特論&quot;の講義資料として作成された．</p><p>本書の目的は，クラウドの初心者を対象とし，クラウドの基礎的な知識・概念を解説する． また， Amazon Web Services (以下， AWS) の提供するクラウド環境を実例として，具体的なクラウドの利用方法をハンズオンを通して学ぶ．</p><p>とくに，科学・エンジニアリングの学生を対象として，研究などの目的でクラウドを利用するための実践的な手順を紹介する． 知識・理論の説明は最小限に留め，実践を行う中で必要な概念の解説を行う予定である． 読者が今後，研究などでクラウドを利用する際の，足がかりとなれば本書の目的は十分達成されたことになる．</p><p>本書は以下のような三部構成になっている．</p><table><caption>本書の構成</caption><colgroup><col style="width:20%;"><col style="width:40%;"><col style="width:40%;"></colgroup><thead><tr class="header"><th></th><th>テーマ</th><th>ハンズオン</th></tr></thead><tbody><tr class="odd"><td><p>第一部 (1章-4章)</p></td><td><p>クラウドの基礎</p></td><td><ul><li><p>AWSに自分のサーバーを立ち上げる</p></li></ul></td></tr><tr class="even"><td><p>第二部 (5章-9章)</p></td><td><p>クラウドを活用した機械学習</p></td><td><ul><li><p>AWS と Jupyter を使って始めるディープラーニング</p></li><li><p>スケーラブルな自動質問回答ボットを作る</p></li><li><p>並列化されたハイパーパラメータサーチの実装</p></li></ul></td></tr><tr class="odd"><td><p>第三部 (10章-13章)</p></td><td><p>サーバーレスアーキテクチャ入門</p></td><td><ul><li><p>Lambda, DynamoDB, S3 の演習</p></li><li><p>俳句を投稿する SNS &quot;Bashoutter&quot; を作る</p></li></ul></td></tr></tbody></table><p>第一部は，クラウドの基礎となる概念・知識を解説する． セキュリティやネットワークなど，クラウドを利用する上で最低限おさえなければいけないポイントを説明する． ハンズオンでは，はじめての仮想サーバーを AWS に立ち上げる演習を行う．</p><p>第二部では，クラウド上で科学計算 (とくに機械学習) を走らせるための入門となる知識・技術を解説する． あわせて， <a href="https://www.docker.com/" target="_blank" rel="noreferrer">Docker</a> とよばれる仮想計算環境の使用方法を紹介する． 一つ目のハンズオンでは， AWS のクラウドで Jupyter Notebook を起動し簡単な機械学習の計算を走らせる課題を実践する． 二つ目のハンズオンでは，深層学習を用いた自然言語処理により，質問に自動で回答を生成するボットを作成する． 最後に，複数台の GPU インスタンスからなるクラスターを起動し，並列に深層学習のハイパーパラメータサーチを行う方法を紹介する．</p><p>第三部では，サーバーレスアーキテクチャとよばれる最新のクラウドのアーキテクチャを紹介する． これは，サーバーの処理能力を負荷に応じてより柔軟に拡大・縮小するための概念であり，それ以前 (Serverful としばしばよばれる) と質的に異なる設計思想をクラウドに導入するものである． ハンズオンでは，サーバーレスクラウドの主要なコンポーネントである Lambda, DynamoDB, S3 の演習を提供する． さらに，サーバーレスの技術を使用して簡単な SNS をクラウド上に作成する．</p><p>これらの豊富なハンズオンにより， AWS 上にクラウドシステムを開発するための知識と技術が身につくはずである． いずれのハンズオンも，実用性を重視したものになっており，これらをベースにカスタマイズを施すことで様々な応用が可能である．</p><h2 id="本書のフィロソフィー" tabindex="-1">本書のフィロソフィー <a class="header-anchor" href="#本書のフィロソフィー" aria-label="Permalink to &quot;本書のフィロソフィー&quot;">​</a></h2><p>本書のフィロソフィーを一言で表すなら， <strong>&quot;ロケットで宇宙まで飛んでいって一度地球を眺めてみよう！&quot;</strong> である．</p><p>どういうことか？</p><p>ここでいう&quot;地球&quot;とは，クラウドコンピューティングの全体像のことである． 言うまでもなく，クラウドという技術は非常に広範かつ複雑な概念で，幾多の情報技術・ハードウェア・アルゴリズムが精緻に組み合わさってできた総体である． そして，今日では科学研究から日常のインフラ設備に至るまで，我々の社会の多くの部分がクラウド技術によって支えられている．</p><p>ここでいう&quot;ロケット&quot;とはこの講義のことである． この講義では，ロケットに乗って宇宙まで飛び立ち，地球(クラウド)の全体を自身の目で眺めてもらう． その際，ロケットの成り立ちや仕組み (背後にある要素技術やプログラムのソースコード) を深くは問わない． 将来，自分が研究などの目的でクラウドを利用することになった際に，改めて学んでもらえば良い． 本書の目的はむしろ，クラウドの最先端に実際に触れ，そこからどんな景色が見えるか(どんな応用が可能か)を実感してもらうことである．</p><p>そのような理由で，本書はクラウドの基礎から応用まで幅広いテーマを取り扱う． 第一部はクラウドの基礎から始め，第二部では一気にレベルアップし機械学習(深層学習)をクラウドで実行する手法を解説する． さらに第三部では，サーバーレス・アーキテクチャというここ数年のうちに確立した全く新しいクラウドの設計について解説する． それぞれで本一冊分以上の内容に相当するものであるが，本書はあえてこれらを一冊にまとめ連続的に俯瞰するという野心的な意図をもって執筆された．</p><p>決して楽な搭乗体験ではないかもしれないが，このロケットにしがみついてきてもらえれば，とてもエキサイティングな景色が見られることを約束したい．</p><p><img src="'+a+'" alt="宇宙からみた地球 (Image from NASA https://www.nasa.gov/image-feature/planet-of-clouds)"></p><h2 id="aws-アカウント" tabindex="-1">AWS アカウント <a class="header-anchor" href="#aws-アカウント" aria-label="Permalink to &quot;AWS アカウント&quot;">​</a></h2><p>本書では，ハンズオン形式で AWS のクラウドを実際に動かす演習を提供する． 自分でハンズオンを実行してみたい読者は，各自で AWS のアカウントの作成をしていただく． AWS のアカウントの作成の仕方は巻末付録 (<a href="#sec:create_aws_account">???</a>) に簡単に記載したので，必要に応じて参照していただきたい．</p><p>AWS にはいくつかの機能に対して無料利用枠が設定されており，いくつかのハンズオンは無料の範囲内で実行できる． 一方，ほかのハンズオン (とくに機械学習を扱うもの) では数ドル程度のコストが発生する． ハンズオンごとに発生するおおよそのコストについて記述があるので，注意をしながらハンズオンに取り組んでいただきたい．</p><p>また，大学などの教育機関における講義で AWS を使用する際は， <a href="https://aws.amazon.com/education/awseducate/" target="_blank" rel="noreferrer">AWS Educate</a> というプログラムを利用することも可能である． これは，講義の担当者が申請を行うことで，受講する学生に対し AWS クレジットが提供されるというプログラムである． AWS Educate を利用することで金銭的な負担なしに AWS を体験することができる． また，講義を経由せず個人でも AWS Educate に参加することも可能である． AWS Educate からは様々な学習教材が提供されているので，ぜひ活用してもらいたい．</p><h2 id="環境構築" tabindex="-1">環境構築 <a class="header-anchor" href="#環境構築" aria-label="Permalink to &quot;環境構築&quot;">​</a></h2><p>本書では， AWS 上にクラウドアプリケーションを展開するハンズオンを実施する． そこで紹介するプログラムを実行するためには，以下の計算機環境が必要である． インストールの方法については，巻末付録 (<a href="#sec:appendix_settingup">???</a>) に記してある． 必要に応じて参照し，環境構築を各自実施していただきたい．</p><ul><li><p><strong>UNIX 系コンソール</strong>: ハンズオンで紹介するコマンドを実行したり， SSH でサーバーにアクセスするため， UNIX 系のコンソール環境が必要である． Mac または Linux のユーザーは， OS に標準搭載のコンソール(ターミナルとも呼ばれる)を使用すればよい． Windows のユーザーは， <a href="https://docs.microsoft.com/en-us/windows/wsl/about" target="_blank" rel="noreferrer">Windows Subsystem for Linux (WSL)</a> を使い， Linux の仮想環境のインストールを推奨する (<a href="#sec:install_wsl">???</a> 参照)．</p></li><li><p><strong>Docker</strong>: 本書では Docker とよばれる仮想計算環境の利用方法を解説する． インストール手順については <a href="#sec:install_docker">???</a> を参照のこと．</p></li><li><p><strong>Python</strong>: Version 3.6 以上をインストールする． とくに，ハンズオンでは <code>venv</code> モジュールを使用する． <code>venv</code> の使い方は <a href="#venv_quick_guide">???</a> 参照のこと．</p></li><li><p><strong>Node.js</strong>: version 12.0 以上 をインストールする．</p></li><li><p><strong>AWS CLI</strong>: <a href="https://docs.aws.amazon.com/cli/latest/userguide/install-cliv2.html" target="_blank" rel="noreferrer">Version 2</a> をインストールする． インストール手順については <a href="#aws_cli_install">???</a> 参照のこと．</p></li><li><p><strong>AWS CDK</strong>: Version 1.100 以上をインストールする． Version 2 以降には未対応である． インストール手順については <a href="#aws_cdk_install">???</a> 参照のこと．</p></li><li><p><strong>AWS 認証鍵の設定</strong>: AWS API をコマンドラインから呼ぶには，認証鍵 (secret key) が設定されている必要がある． 認証鍵の設定については <a href="#aws_cli_install">???</a> 参照のこと．</p></li></ul><h3 id="ハンズオン実行用の-docker-image" tabindex="-1">ハンズオン実行用の Docker Image <a class="header-anchor" href="#ハンズオン実行用の-docker-image" aria-label="Permalink to &quot;ハンズオン実行用の Docker Image&quot;">​</a></h3><p>Python, Node.js, AWS CDK など，ハンズオンのプログラムを実行するために必要なプログラム/ライブラリがインストール済みの Docker image を用意した． また，ハンズオンのソースコードもクローン済みである． Docker の使い方を知っている読者は，これを使えば，諸々のインストールをする必要なく，すぐにハンズオンのプログラムを実行できる．</p><p>次のコマンドで起動する．</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight vp-code-dark"><code><span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">run</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-it</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">tomomano/labc</span></span></code></pre><pre class="shiki one-dark-pro vp-code-light"><code><span class="line"><span style="color:#61AFEF;">$</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">docker</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">run</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">-it</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">tomomano/labc</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>この Docker image の使い方や詳細は <a href="#sec_handson_docker">???</a> に記載している．</p><h2 id="前提知識" tabindex="-1">前提知識 <a class="header-anchor" href="#前提知識" aria-label="Permalink to &quot;前提知識&quot;">​</a></h2><p>本書を読むにあたり，要求する前提知識は大学初等程度の計算機科学の知識 (OS，プログラミングなど)のみである． それ以上の前提知識はとくに仮定しない． クラウドの利用経験もゼロで問題ない． が，以下の事前知識があるとよりスムーズに理解をすることができるだろう．</p><ul><li><p><strong>Python の基本的な理解</strong>: 本書では Python を使ってプログラムの作成を行う． 使用するライブラリは十分抽象化されており，関数の名前を見ただけで意味が明瞭なものがほとんどであるので， Python に詳しくなくても心配する必要はない．</p></li><li><p><strong>Linux コマンドラインの基礎的な理解</strong>: クラウドを利用する際，クラウド上に立ち上がるサーバーは基本的に Linux である． Linux のコマンドラインについて知識があると，トラブルシュートなどが容易になる． 筆者のおすすめの参考書は <a href="http://linuxcommand.org/tlcl.php" target="_blank" rel="noreferrer">The Linux Command Line by William Shotts</a> である． ウェブで無料で読むことができるので，読んだことのない人はぜひ一読を．</p></li></ul><h2 id="講義に関連する資料" tabindex="-1">講義に関連する資料 <a class="header-anchor" href="#講義に関連する資料" aria-label="Permalink to &quot;講義に関連する資料&quot;">​</a></h2><p>ハンズオンで使うプログラムや教科書のソースコードは以下のウェブページで公開している．</p><p><a href="https://github.com/tomomano/learn-aws-by-coding" target="_blank" rel="noreferrer">https://github.com/tomomano/learn-aws-by-coding</a></p><h2 id="本書で使用するノーテーションなど" tabindex="-1">本書で使用するノーテーションなど <a class="header-anchor" href="#本書で使用するノーテーションなど" aria-label="Permalink to &quot;本書で使用するノーテーションなど&quot;">​</a></h2><ul><li><p>コードやシェルのコマンドは <code>monospace letter</code> で記述する．</p></li><li><p>シェルに入力するコマンドは，それがシェルコマンドであると明示する目的で，先頭に <code>$</code> がつけてある． <code>$</code> はコマンドをコピー&amp;ペーストするときは除かなければならない． 逆に，コマンドの出力には <code>$</code> はついていない点に留意する．</p></li></ul><p>また，以下のような形式で注意やチップスを提供する．</p><p>追加のコメントなどを記す．</p><p>発展的な議論やアイディアなどを紹介する．</p><p>陥りやすいミスなどの注意事項を述べる．</p><p>絶対に犯してはならないミスを指摘する．</p>',44),n=[l];function p(i,c,d,h,u,m){return o(),t("div",null,n)}const b=e(s,[["render",p]]);export{S as __pageData,b as default};
