import{_ as s,a,b as e,c as n,d as l,e as o,f as p,g as r,h as c,i as t,j as i,k as d,l as y,m as u,n as h,o as A}from"./chunks/venv_shell.dc2530bc.js";import{_ as m,c as g,o as b,R as v}from"./chunks/framework.ade46834.js";const Y=JSON.parse('{"title":"Appendix: 環境構築","description":"","frontmatter":{},"headers":[],"relativePath":"development/aws/appendix.md","filePath":"development/aws/appendix.md","lastUpdated":1694652899000}'),B={name:"development/aws/appendix.md"},k=v('<h1 id="appendix-環境構築" tabindex="-1">Appendix: 環境構築 <a class="header-anchor" href="#appendix-環境構築" aria-label="Permalink to &quot;Appendix: 環境構築&quot;">​</a></h1><p>本書を読み進めるにあたって，ハンズオンのプログラムを実行するための環境を自分のローカルマシンにセットアップしなければならない． ここでは， AWS やコマンドラインの初心者を想定して，本章で必要なソフトウェアやライブラリのインストールなどを簡単に解説する． 以下に簡単な目次を示そう． 既に環境構築が済んでいる場合は適宜読み飛ばしていただき，関係のある箇所のみ目を通せば良い．</p><ul><li><p>AWS アカウントの取得 (<a href="#sec:create_aws_account">AWS アカウントの取得</a>)</p></li><li><p>AWS シークレットキーの作成 (<a href="#aws_secrets">AWS のシークレットキーの作成</a>)</p></li><li><p>AWS CLI のインストール (<a href="#aws_cli_install">AWS CLI のインストール</a>)</p></li><li><p>AWS CDK のインストール (<a href="#aws_cdk_install">AWS CDK のインストール</a>)</p></li><li><p>WSL のインストール (<a href="#sec:install_wsl">WSL のインストール</a>)</p></li><li><p>Docker のインストール (<a href="#sec:install_docker">Docker のインストール</a>)</p></li><li><p>Python venv クイックガイド (<a href="#venv_quick_guide">Python クイックガイド</a>)</p></li><li><p>ハンズオン実行用の Docker image の使い方 (<a href="#sec_handson_docker">ハンズオン実行用の Docker image の使い方</a>)</p></li></ul><p>使用する OS は Linux/Mac/Windows のどれを用いても構わない． Windows のユーザーは， Windows Subsytem for Linux (WSL) を使用することを想定している (<a href="#sec:install_wsl">WSL のインストール</a>)．</p><p>また，本書のハンズオンを実行するための <a href="https://hub.docker.com/repository/docker/tomomano/labc" target="_blank" rel="noreferrer">Docker イメージ</a> を提供している． これを用いると， AWS CLI/CDK や Python の設定などをスキップできるので， Docker の使用方法を知っている読者には便利だろう．</p><h2 id="aws-アカウントの取得" tabindex="-1">AWS アカウントの取得 <a class="header-anchor" href="#aws-アカウントの取得" aria-label="Permalink to &quot;AWS アカウントの取得&quot;">​</a></h2><p>本書で提供するハンズオンを実際に自分で試すには，読者自身で AWS のアカウントの作成をする必要がある． 詳しいアカウントの作成の手順は <a href="https://aws.amazon.com/jp/register-flow/" target="_blank" rel="noreferrer">公式のドキュメンテーション</a> に書かれているので，そちらも参照していただきたい． 以下の手順に従ってアカウントの作成を行う．</p><p>まず，ウェブブラウザから <a href="https://aws.amazon.com/console/" target="_blank" rel="noreferrer">AWS コンソール</a> にアクセスし，右上の <code>Create an AWS Account</code> をクリックする (<a href="#fig:aws-signup-1">figure_title</a> で実線で囲った部分)．</p><p><img src="'+s+'" alt="サインアップ (1): AWS コンソールにアクセス"></p><p>次に，遷移した先のページでメールアドレスとパスワードなどの登録を行う (<a href="#fig:aws-signup-3">figure_title</a>)．</p><p><img src="'+a+'" alt="サインアップ (2): メールアドレス・パスワードなどの登録．"></p><p>続いて，住所や電話番号などを訊かれるので，すべて入力しよう (<a href="#fig:aws-signup-4">figure_title</a>)．</p><p><img src="'+e+'" alt="サインアップ (3): 住所・電話番号の入力"></p><p>次に，クレジットカードの情報の登録を求められる (<a href="#fig:aws-signup-5">figure_title</a>)． 個人で AWS を利用する場合は，利用料金の請求はクレジットカードを経由して行われる． クレジットカードの登録なしには AWS を使い始めることはできないことに注意．</p><p><img src="'+n+'" alt="サインアップ (4): クレジットカードの登録"></p><p>次の画面では，携帯電話の SMS またはボイスメッセージを利用した本人確認が求められる (<a href="#fig:aws-signup-6">figure_title</a>)． 希望の認証方法を選択し，自分の携帯電話番号を入力しよう．</p><p><img src="'+l+'" alt="サインアップ (5): 携帯電話による本人確認"></p><p>無事に本人確認が完了すると，最後にサポートプランの選択を求められる (<a href="#fig:aws-signup-8">figure_title</a>)． 無料の Basic support を選択しておけば問題ない．</p><p><img src="'+o+'" alt="サインアップ (6): サポートプランの選択"></p><p>以上のステップにより，アカウントの作成が完了する (<a href="#fig:aws-signup-9">figure_title</a>)． 早速ログインをして， AWS コンソールにアクセスできるか確認しておこう．</p><p><img src="'+p+'" alt="サインアップ (7): アカウントの作成が完了した"></p><h2 id="aws-のシークレットキーの作成" tabindex="-1">AWS のシークレットキーの作成 <a class="header-anchor" href="#aws-のシークレットキーの作成" aria-label="Permalink to &quot;AWS のシークレットキーの作成&quot;">​</a></h2><p>AWS シークレットキーとは， AWS CLI や AWS CDK から AWS の API を操作するときに，ユーザー認証を行うための鍵のことである． AWS CLI/CDK を使うには，最初にシークレットキーを発行する必要がある． AWS シークレットキーの詳細は <a href="https://docs.aws.amazon.com/general/latest/gr/aws-sec-cred-types.html" target="_blank" rel="noreferrer">公式ドキュメンテーション &quot;Understanding and getting your AWS credentials&quot;</a> を参照．</p><ol><li><p>AWS コンソールにログインする．</p></li><li><p>画面右上のアカウント名をクリックし，表示されるプルダウンメニューから &quot;My Security Credentials&quot; を選択 (<a href="#fig:aws_secret_key_1">figure_title</a>)</p></li><li><p>&quot;Access keys for CLI, SDK, &amp; API access&quot; の下にある &quot;Create accesss key&quot; のボタンをクリックする (<a href="#fig:aws_secret_key_2">figure_title</a>)</p></li><li><p>表示された Access key ID, Secret access key を記録しておく (画面を閉じると二度と表示されない)．</p></li><li><p>鍵を忘れてしまった場合などは，同じ手順で再発行が可能である．</p></li><li><p>発行したシークレットキーは， <code>~/.aws/credentials</code> のファイルに書き込むか，環境変数に設定するなどして使う (詳しくは <a href="#aws_cli_install">AWS CLI のインストール</a>)．</p></li></ol><p><img src="'+r+'" alt="AWS シークレットキーの発行1"></p><p><img src="'+c+`" alt="AWS シークレットキーの発行2"></p><p><strong>AWS Educate Starter Account</strong> を用いている場合は，次の手順でシークレットキーを確認する．</p><ul><li><p>AWS Educate のコンソール画面から， <code>vocareum</code> のコンソールに移動する (<a href="#fig:vocareum_console">figure_title</a>)．</p></li><li><p><code>Account Details</code> をクリックし，続いて <code>AWS CLI: Show</code> をクリックする．</p></li><li><p><code>aws_access_key_id</code>, <code>aws_secret_access_key</code>, <code>aws_session_token</code> が表示される (<a href="#fig:vocareum_secret">figure_title</a>)． ここで表示された内容を <code>~/.aws/credentials</code> にコピーする (<a href="#aws_cli_install">AWS CLI のインストール</a> 参照)． <code>aws_session_token</code> の箇所も漏らさずコピーすること．</p></li><li><p>続いて， <code>~/.aws/config</code> というファイルを用意し，次の内容を書き込む． 現時点では AWS Starter Account は <code>us-east-1</code> リージョンでしか利用できないためである．</p></li></ul><div class="language-toml vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">toml</span><pre class="shiki solarized-dark vp-code-dark"><code><span class="line"><span style="color:#839496;">[default]</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">region</span><span style="color:#839496;"> = u</span><span style="color:#DC322F;">s-east-1</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">output</span><span style="color:#839496;"> = j</span><span style="color:#DC322F;">son</span></span></code></pre><pre class="shiki solarized-light vp-code-light"><code><span class="line"><span style="color:#657B83;">[default]</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#268BD2;">region</span><span style="color:#657B83;"> = u</span><span style="color:#DC322F;">s-east-1</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#268BD2;">output</span><span style="color:#657B83;"> = j</span><span style="color:#DC322F;">son</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><ul><li>上記の説明ではプロファイル名が <code>default</code> となっていたが，これは自分の好きな名前に変更してもよい． <code>default</code> 以外の名前を使用する場合は，コマンドを実行するときにプロファイル名を指定する必要がある (詳しくは <a href="#aws_cli_install">AWS CLI のインストール</a>)．</li></ul><p><img src="`+t+'" alt="vocareum コンソール"></p><p><img src="'+i+`" alt="vocareum から AWS シークレットキーの発行"></p><h2 id="aws-cli-のインストール" tabindex="-1">AWS CLI のインストール <a class="header-anchor" href="#aws-cli-のインストール" aria-label="Permalink to &quot;AWS CLI のインストール&quot;">​</a></h2><p>読者のために，執筆時点におけるインストールの手順 (Linux 向け) を簡単に記述する． 将来のバージョンでは変更される可能性があるので，常に <a href="https://docs.aws.amazon.com/cli/latest/userguide/install-cliv2.html" target="_blank" rel="noreferrer">公式のドキュメンテーション</a> で最新の情報をチェックすることを忘れずに．</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki solarized-dark vp-code-dark"><code><span class="line"><span style="color:#268BD2;">$</span><span style="color:#839496;"> </span><span style="color:#2AA198;">curl</span><span style="color:#839496;"> </span><span style="color:#2AA198;">&quot;https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip&quot;</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">-o</span><span style="color:#839496;"> </span><span style="color:#2AA198;">&quot;awscliv2.zip&quot;</span></span>
<span class="line"><span style="color:#268BD2;">$</span><span style="color:#839496;"> </span><span style="color:#2AA198;">unzip</span><span style="color:#839496;"> </span><span style="color:#2AA198;">awscliv2.zip</span></span>
<span class="line"><span style="color:#268BD2;">$</span><span style="color:#839496;"> </span><span style="color:#2AA198;">sudo</span><span style="color:#839496;"> </span><span style="color:#2AA198;">./aws/install</span></span></code></pre><pre class="shiki solarized-light vp-code-light"><code><span class="line"><span style="color:#268BD2;">$</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">curl</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">&quot;https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip&quot;</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">-o</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">&quot;awscliv2.zip&quot;</span></span>
<span class="line"><span style="color:#268BD2;">$</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">unzip</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">awscliv2.zip</span></span>
<span class="line"><span style="color:#268BD2;">$</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">sudo</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">./aws/install</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>インストールできたか確認するため，次のコマンドを打ってバージョン情報が出力されることを確認する．</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki solarized-dark vp-code-dark"><code><span class="line"><span style="color:#268BD2;">$</span><span style="color:#839496;"> </span><span style="color:#2AA198;">aws</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">--version</span></span></code></pre><pre class="shiki solarized-light vp-code-light"><code><span class="line"><span style="color:#268BD2;">$</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">aws</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">--version</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>インストールができたら，次のコマンドにより初期設定を行う (<a href="https://docs.aws.amazon.com/cli/latest/userguide/cli-chap-configure.html" target="_blank" rel="noreferrer">参照</a>)．</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki solarized-dark vp-code-dark"><code><span class="line"><span style="color:#268BD2;">$</span><span style="color:#839496;"> </span><span style="color:#2AA198;">aws</span><span style="color:#839496;"> </span><span style="color:#2AA198;">configure</span></span></code></pre><pre class="shiki solarized-light vp-code-light"><code><span class="line"><span style="color:#268BD2;">$</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">aws</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">configure</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>コマンドを実行すると， <code>AWS Access Key ID</code>, <code>AWS Secret Access Key</code> を入力するよう指示される． シークレットキーの発行については <a href="#aws_secrets">AWS のシークレットキーの作成</a> を参照． コマンドは加えて，<code>Default region name</code> を訊いてくる． ここには自分の好きな地域 (例えば <code>ap-northeast-1</code> =東京リージョン) を指定すればよい． 最後の <code>Default output format</code> は <code>json</code> としておくとよい．</p><p>このコマンドを完了すると， <code>~/.aws/credentials</code> と <code>~/.aws/config</code>　という名前のファイルが生成されているはずである． 念のため， <code>cat</code> コマンドを使って中身を確認してみるとよい．</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki solarized-dark vp-code-dark"><code><span class="line"><span style="color:#268BD2;">$</span><span style="color:#839496;"> </span><span style="color:#2AA198;">cat</span><span style="color:#839496;"> </span><span style="color:#2AA198;">~/.aws/credentials</span></span>
<span class="line"><span style="color:#839496;">[default]</span></span>
<span class="line"><span style="color:#268BD2;">aws_access_key_id</span><span style="color:#839496;"> </span><span style="color:#2AA198;">=</span><span style="color:#839496;"> </span><span style="color:#2AA198;">XXXXXXXXXXXXXXXXXX</span></span>
<span class="line"><span style="color:#268BD2;">aws_secret_access_key</span><span style="color:#839496;"> </span><span style="color:#2AA198;">=</span><span style="color:#839496;"> </span><span style="color:#2AA198;">YYYYYYYYYYYYYYYYYYY</span></span>
<span class="line"></span>
<span class="line"><span style="color:#268BD2;">$</span><span style="color:#839496;"> </span><span style="color:#2AA198;">cat</span><span style="color:#839496;"> </span><span style="color:#2AA198;">~/.aws/config</span></span>
<span class="line"><span style="color:#839496;">[profile default]</span></span>
<span class="line"><span style="color:#268BD2;">region</span><span style="color:#839496;"> </span><span style="color:#2AA198;">=</span><span style="color:#839496;"> </span><span style="color:#2AA198;">ap-northeast-1</span></span>
<span class="line"><span style="color:#268BD2;">output</span><span style="color:#839496;"> </span><span style="color:#2AA198;">=</span><span style="color:#839496;"> </span><span style="color:#2AA198;">json</span></span></code></pre><pre class="shiki solarized-light vp-code-light"><code><span class="line"><span style="color:#268BD2;">$</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">cat</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">~/.aws/credentials</span></span>
<span class="line"><span style="color:#657B83;">[default]</span></span>
<span class="line"><span style="color:#268BD2;">aws_access_key_id</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">=</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">XXXXXXXXXXXXXXXXXX</span></span>
<span class="line"><span style="color:#268BD2;">aws_secret_access_key</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">=</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">YYYYYYYYYYYYYYYYYYY</span></span>
<span class="line"></span>
<span class="line"><span style="color:#268BD2;">$</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">cat</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">~/.aws/config</span></span>
<span class="line"><span style="color:#657B83;">[profile default]</span></span>
<span class="line"><span style="color:#268BD2;">region</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">=</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">ap-northeast-1</span></span>
<span class="line"><span style="color:#268BD2;">output</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">=</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">json</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p><code>~/.aws/credentials</code> には認証鍵の情報が， <code>~/.aws/config</code> には AWS CLI の設定が記録されている．</p><p>デフォルトでは， <code>[default]</code> という名前でプロファイルが保存される． いくつかのプロファイルを使い分けたければ， default の例に従って，たとえば <code>[myprofile]</code> などという名前でプロファイルを追加すればよい．</p><p>AWS CLI でコマンドを打つときに，プロファイルを使い分けるには，</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki solarized-dark vp-code-dark"><code><span class="line"><span style="color:#268BD2;">$</span><span style="color:#839496;"> </span><span style="color:#2AA198;">aws</span><span style="color:#839496;"> </span><span style="color:#2AA198;">s3</span><span style="color:#839496;"> </span><span style="color:#2AA198;">ls</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">--profile</span><span style="color:#839496;"> </span><span style="color:#2AA198;">myprofile</span></span></code></pre><pre class="shiki solarized-light vp-code-light"><code><span class="line"><span style="color:#268BD2;">$</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">aws</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">s3</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">ls</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">--profile</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">myprofile</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>のように， <code>--profile</code> というオプションをつけてコマンドを実行する．</p><p>いちいち <code>--profile</code> オプションをつけるのが面倒だと感じる場合は， <code>AWS_PROFILE</code> という環境変数を設定するとよい．</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki solarized-dark vp-code-dark"><code><span class="line"><span style="color:#268BD2;">$</span><span style="color:#839496;"> </span><span style="color:#2AA198;">export</span><span style="color:#839496;"> </span><span style="color:#2AA198;">AWS_PROFILE=myprofile</span></span></code></pre><pre class="shiki solarized-light vp-code-light"><code><span class="line"><span style="color:#268BD2;">$</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">export</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">AWS_PROFILE=myprofile</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>あるいは，認証情報などを環境変数に設定するテクニックもある．</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki solarized-dark vp-code-dark"><code><span class="line"><span style="color:#93A1A1;font-weight:bold;">export</span><span style="color:#839496;"> </span><span style="color:#268BD2;">AWS_ACCESS_KEY_ID</span><span style="color:#859900;">=</span><span style="color:#2AA198;">XXXXXX</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">export</span><span style="color:#839496;"> </span><span style="color:#268BD2;">AWS_SECRET_ACCESS_KEY</span><span style="color:#859900;">=</span><span style="color:#2AA198;">YYYYYY</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">export</span><span style="color:#839496;"> </span><span style="color:#268BD2;">AWS_DEFAULT_REGION</span><span style="color:#859900;">=</span><span style="color:#2AA198;">ap-northeast-1</span></span></code></pre><pre class="shiki solarized-light vp-code-light"><code><span class="line"><span style="color:#586E75;font-weight:bold;">export</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">AWS_ACCESS_KEY_ID</span><span style="color:#859900;">=</span><span style="color:#2AA198;">XXXXXX</span></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">export</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">AWS_SECRET_ACCESS_KEY</span><span style="color:#859900;">=</span><span style="color:#2AA198;">YYYYYY</span></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">export</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">AWS_DEFAULT_REGION</span><span style="color:#859900;">=</span><span style="color:#2AA198;">ap-northeast-1</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>これらの環境変数は， <code>~/.aws/credentials</code> よりも高い優先度をもつので，環境変数が設定されていればそちらの情報が使用される (<a href="https://docs.aws.amazon.com/cli/latest/userguide/cli-chap-configure.html" target="_blank" rel="noreferrer">参照</a>)．</p><p><strong>AWS Educate Starter Account</strong> は <code>us-east-1</code> のリージョンのみ利用可能である (執筆時点での情報)． よって， AWS Educate Starter Account を使用している場合は， default region を <code>us-east-1</code> に設定する必要がある．</p><h2 id="aws-cdk-のインストール" tabindex="-1">AWS CDK のインストール <a class="header-anchor" href="#aws-cdk-のインストール" aria-label="Permalink to &quot;AWS CDK のインストール&quot;">​</a></h2><p>読者のために，執筆時点におけるインストールの手順 (Linux 向け) を簡単に記述する． 将来のバージョンでは変更される可能性があるので，常に <a href="https://docs.aws.amazon.com/cdk/latest/guide/getting_started.html" target="_blank" rel="noreferrer">公式のドキュメンテーション</a> で最新の情報をチェックすることを忘れずに．</p><p>Node.js がインストールされていれば，基本的に次のコマンドを実行すればよい．</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki solarized-dark vp-code-dark"><code><span class="line"><span style="color:#268BD2;">$</span><span style="color:#839496;"> </span><span style="color:#2AA198;">sudo</span><span style="color:#839496;"> </span><span style="color:#2AA198;">npm</span><span style="color:#839496;"> </span><span style="color:#2AA198;">install</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">-g</span><span style="color:#839496;"> </span><span style="color:#2AA198;">aws-cdk</span></span></code></pre><pre class="shiki solarized-light vp-code-light"><code><span class="line"><span style="color:#268BD2;">$</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">sudo</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">npm</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">install</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">-g</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">aws-cdk</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>本書のハンズオンは AWS CDK version 1.100.0 で開発した． CDK は開発途上のライブラリなので，将来的に API が変更される可能性がある． API の変更によりエラーが生じた場合は， version 1.100.0 を使用することを推奨する．</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki solarized-dark vp-code-dark"><code><span class="line"><span style="color:#268BD2;">$</span><span style="color:#839496;"> </span><span style="color:#2AA198;">npm</span><span style="color:#839496;"> </span><span style="color:#2AA198;">install</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">-g</span><span style="color:#839496;"> </span><span style="color:#2AA198;">aws-cdk@1.100</span></span></code></pre><pre class="shiki solarized-light vp-code-light"><code><span class="line"><span style="color:#268BD2;">$</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">npm</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">install</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">-g</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">aws-cdk@1.100</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>インストールできたか確認するため，次のコマンドを打って正しくバージョンが表示されることを確認する．</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki solarized-dark vp-code-dark"><code><span class="line"><span style="color:#268BD2;">$</span><span style="color:#839496;"> </span><span style="color:#2AA198;">cdk</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">--version</span></span></code></pre><pre class="shiki solarized-light vp-code-light"><code><span class="line"><span style="color:#268BD2;">$</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">cdk</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">--version</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>インストールができたら，次のコマンドにより AWS 側の初期設定を行う． これは一度実行すれば OK．</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki solarized-dark vp-code-dark"><code><span class="line"><span style="color:#268BD2;">$</span><span style="color:#839496;"> </span><span style="color:#2AA198;">cdk</span><span style="color:#839496;"> </span><span style="color:#2AA198;">bootstrap</span></span></code></pre><pre class="shiki solarized-light vp-code-light"><code><span class="line"><span style="color:#268BD2;">$</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">cdk</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">bootstrap</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><code>cdk bootstrap</code> を実行するときは，AWS の認証情報とリージョンが正しく設定されていることを確認する． デフォルトでは <code>~/.aws/config</code> にあるデフォルトのプロファイルが使用される． デフォルト以外のプロファイルを用いるときは <a href="#aws_cli_install">AWS CLI のインストール</a> で紹介したテクニックを使って切り替える．</p><p>AWS CDK の認証情報の設定は AWS CLI と基本的に同じである．詳しくは <a href="#aws_cli_install">AWS CLI のインストール</a> を参照．</p><h2 id="wsl-のインストール" tabindex="-1">WSL のインストール <a class="header-anchor" href="#wsl-のインストール" aria-label="Permalink to &quot;WSL のインストール&quot;">​</a></h2><p>本書のハンズオンではコマンドラインから AWS CLI のコマンドを実行したり， Python で書かれたプログラムを実行する． コマンドは基本的に UNIX のターミナルを想定して書かれている． Linux や Mac のユーザーは OS に標準搭載されているターミナルを用いれば良い． Windows を利用している読者は， <a href="https://docs.microsoft.com/en-us/windows/wsl/" target="_blank" rel="noreferrer">Windows Subsystem for Linux (WSL)</a> を利用することで，仮想の Linux 環境を構築することを推奨する． <a href="https://www.cygwin.com/" target="_blank" rel="noreferrer">Cygwin</a> などの Linux 環境をエミュレートするほかのツールでも構わないが，本書のプログラムは WSL でのみ動作確認を行っている．</p><p>WSL とは， Windows の OS 上で Linux の仮想環境を起動するための， Microsoft 社が公式で提供しているソフトウェアである． Ubuntu など希望の Linux distribution が選択でき，基本的にすべての Linux 向けに作られたプログラム・ソフトウェアを使用することができる．</p><p>執筆時点では <a href="https://docs.microsoft.com/en-us/windows/wsl/compare-versions#whats-new-in-wsl-2" target="_blank" rel="noreferrer">WSL 2</a> が最新版として提供されているので，以下では WSL 2 のインストール手順を簡単に説明する． 細かな詳細などは， <a href="https://docs.microsoft.com/en-us/windows/wsl/install-win10" target="_blank" rel="noreferrer">公式ドキュメンテーション</a> を参照のこと．</p><p>前提として，使用される OS は Windows 10 (Pro または Home エディション) でなければならない． さらに，使用している Windows 10 のバージョンが WSL に対応するバージョンであるかを確認する． X64 のシステムでは Version 1903, Build 18362 以上でなければならない． バージョンが対応していない場合は、 Windows のアップデートを行う．</p><p>まず最初に， Administrator 権限で PowerShell を起動する (<a href="#fig:powershell">figure_title</a>)． 左下の Windows メニューの検索バーに <code>powershell</code> と入力すると， PowerShell のプログラムが見つかるはずである， これを右クリックし、 <code>Run as administrator</code> を選択し起動する．</p><p><img src="`+d+'" alt="管理者権限での PowerShell の起動"></p><p>PowerShell が起動したら、次のコマンドを実行する．</p><div class="language-powershell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki solarized-dark vp-code-dark"><code><span class="line"><span style="color:#268BD2;">dism.exe</span><span style="color:#839496;"> </span><span style="color:#859900;">/</span><span style="color:#839496;">online </span><span style="color:#859900;">/</span><span style="color:#268BD2;">enable-feature</span><span style="color:#839496;"> </span><span style="color:#859900;">/</span><span style="color:#839496;">featurename:Microsoft</span><span style="color:#859900;">-</span><span style="color:#839496;">Windows</span><span style="color:#859900;">-</span><span style="color:#839496;">Subsystem</span><span style="color:#859900;">-</span><span style="color:#839496;">Linux </span><span style="color:#859900;">/</span><span style="color:#839496;">all </span><span style="color:#859900;">/</span><span style="color:#839496;">norestart</span></span></code></pre><pre class="shiki solarized-light vp-code-light"><code><span class="line"><span style="color:#268BD2;">dism.exe</span><span style="color:#657B83;"> </span><span style="color:#859900;">/</span><span style="color:#657B83;">online </span><span style="color:#859900;">/</span><span style="color:#268BD2;">enable-feature</span><span style="color:#657B83;"> </span><span style="color:#859900;">/</span><span style="color:#657B83;">featurename:Microsoft</span><span style="color:#859900;">-</span><span style="color:#657B83;">Windows</span><span style="color:#859900;">-</span><span style="color:#657B83;">Subsystem</span><span style="color:#859900;">-</span><span style="color:#657B83;">Linux </span><span style="color:#859900;">/</span><span style="color:#657B83;">all </span><span style="color:#859900;">/</span><span style="color:#657B83;">norestart</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>実行して、“The operation completed successfully.” と出力されるのを確認する． これで WSL が enable される．</p><p>次に，先ほどと同じ Administrator 権限で開いた PowerShell で次のコマンドを実行する。</p><div class="language-powershell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki solarized-dark vp-code-dark"><code><span class="line"><span style="color:#268BD2;">dism.exe</span><span style="color:#839496;"> </span><span style="color:#859900;">/</span><span style="color:#839496;">online </span><span style="color:#859900;">/</span><span style="color:#268BD2;">enable-feature</span><span style="color:#839496;"> </span><span style="color:#859900;">/</span><span style="color:#839496;">featurename:VirtualMachinePlatform </span><span style="color:#859900;">/</span><span style="color:#839496;">all </span><span style="color:#859900;">/</span><span style="color:#839496;">norestart</span></span></code></pre><pre class="shiki solarized-light vp-code-light"><code><span class="line"><span style="color:#268BD2;">dism.exe</span><span style="color:#657B83;"> </span><span style="color:#859900;">/</span><span style="color:#657B83;">online </span><span style="color:#859900;">/</span><span style="color:#268BD2;">enable-feature</span><span style="color:#657B83;"> </span><span style="color:#859900;">/</span><span style="color:#657B83;">featurename:VirtualMachinePlatform </span><span style="color:#859900;">/</span><span style="color:#657B83;">all </span><span style="color:#859900;">/</span><span style="color:#657B83;">norestart</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>実行して， “The operation completed successfully.” と出力されるのを確認する． これが確認出来たら、一度コンピュータを再起動する．</p><p>続いて， Linux kernel update package を次のリンクからダウンロードする． <a href="https://wslstorestorage.blob.core.windows.net/wslblob/wsl_update_x64.msi" target="_blank" rel="noreferrer">https://wslstorestorage.blob.core.windows.net/wslblob/wsl_update_x64.msi</a></p><p>ダウンロードしたファイルをダブルクリックして実行する． ダイアログに従ってインストールを完了させる．</p><p>そうしたら，再び PowerShell を開き次のコマンドを実行する。</p><div class="language-powershell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki solarized-dark vp-code-dark"><code><span class="line"><span style="color:#839496;">wsl </span><span style="color:#859900;">--</span><span style="color:#268BD2;">set-default</span><span style="color:#859900;">-</span><span style="color:#839496;">version </span><span style="color:#D33682;">2</span></span></code></pre><pre class="shiki solarized-light vp-code-light"><code><span class="line"><span style="color:#657B83;">wsl </span><span style="color:#859900;">--</span><span style="color:#268BD2;">set-default</span><span style="color:#859900;">-</span><span style="color:#657B83;">version </span><span style="color:#D33682;">2</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>最後に、自分の好みの Linux distribution をインストールする． ここでは Ubuntu 20.04 をインストールしよう．</p><p>Microsoft store のアプリを起動し，検索バーに <code>Ubuntu</code> と入力する． Ubuntu 20.04 LTS という項目が見つかるはずなので，それを開き， “Get” ボタンをクリックする (<a href="#fig:microsoft_store">figure_title</a>)． しばらく待つと， Ubuntu 20.04 のインストールが完了する．</p><p><img src="'+y+'" alt="Microsoft store から Ubuntu 20.04 をインストール"></p><p>Ubuntu 20.04 を初回に起動すると，初期設定が自動で開始され，数分待つことになる． 初期設定が終わると，ユーザー名・パスワードを設定するようプロンプトが出るので，プロンプトに従い入力する．</p><p>これで WSL2 のインストールが完了した． 早速 WSL2 を起動してみよう． 左下の Windows メニューの検索バーに <code>Ubuntu</code> と入力すると， Ubuntu 20.04 のプログラムが見つかるはずである (<a href="#fig:ubuntu">figure_title</a>)． クリックして起動しよう．</p><p><img src="'+u+'" alt="Ubuntu 20.04 の起動"></p><p>すると，ターミナルの黒い画面が立ち上がるだろう (<a href="#fig:wsl_window">figure_title</a>)． <code>ls</code>, <code>top</code> などのコマンドを打ってみて， WSL がきちんと動作していることを確認しよう．</p><p><img src="'+h+'" alt="WSL の起動画面"></p><p>オプションとして， <a href="https://docs.microsoft.com/en-us/windows/terminal/get-started" target="_blank" rel="noreferrer">Windows Terminal</a> というマイクロソフトから提供されているツールを使うと，より快適に WSL を使用することができる． 興味のある読者はこちらのインストールも推奨する．</p><h2 id="docker-のインストール" tabindex="-1">Docker のインストール <a class="header-anchor" href="#docker-のインストール" aria-label="Permalink to &quot;Docker のインストール&quot;">​</a></h2><p>Docker のインストールの方法は OS によって異なる．</p><p>Mac ユーザーは， Docker Desktop をインストールする． インストールの方法は， <a href="https://docs.docker.com/docker-for-mac/install/" target="_blank" rel="noreferrer">Docker のウェブサイト</a> から， Mac 版の Docker Desktop をダウンロードし，ダウンロードされたファイルをダブルクリックし， <code>Applications</code> のフォルダにドラッグするだけで良い． 詳細は <a href="https://docs.docker.com/docker-for-mac/install/" target="_blank" rel="noreferrer">公式ドキュメンテーション</a> を参照のこと．</p><p>Windows のユーザーは，Docker Desktop をインストールする． その際， WSL 2 が事前にインストールされていなければならない． 詳細は <a href="https://docs.docker.com/desktop/windows/install/" target="_blank" rel="noreferrer">公式ドキュメンテーション</a> を参照のこと． Docker Desktop をインストールすると， WSL からも <code>docker</code> コマンドが使用できるようになる．</p><p>Linux ユーザー (特に Ubuntu ユーザー) については，インストールの方法はいくつかのアプローチがある． <a href="https://docs.docker.com/engine/install/ubuntu/" target="_blank" rel="noreferrer">公式ドキュメンテーション</a> にいくつかのインストールの方法が示されているので，詳しい情報はそちらを参照いただきたい．</p><p>最も簡単な方法は， Docker が公式で提供しているインストールスクリプトを用いる方法である． この場合，次のコマンドを実行することで Docker がインストールされる．</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki solarized-dark vp-code-dark"><code><span class="line"><span style="color:#268BD2;">$</span><span style="color:#839496;"> </span><span style="color:#2AA198;">curl</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">-fsSL</span><span style="color:#839496;"> </span><span style="color:#2AA198;">https://get.docker.com</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">-o</span><span style="color:#839496;"> </span><span style="color:#2AA198;">get-docker.sh</span></span>\n<span class="line"><span style="color:#268BD2;">$</span><span style="color:#839496;"> </span><span style="color:#2AA198;">sudo</span><span style="color:#839496;"> </span><span style="color:#2AA198;">sh</span><span style="color:#839496;"> </span><span style="color:#2AA198;">get-docker.sh</span></span></code></pre><pre class="shiki solarized-light vp-code-light"><code><span class="line"><span style="color:#268BD2;">$</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">curl</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">-fsSL</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">https://get.docker.com</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">-o</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">get-docker.sh</span></span>\n<span class="line"><span style="color:#268BD2;">$</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">sudo</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">sh</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">get-docker.sh</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>デフォルトのインストールでは， root ユーザーのみが <code>docker</code> コマンドを使用できる設定になっている． 従って，コマンドには毎回 <code>sudo</code> を付け加える必要がある． これが面倒だと感じる場合は，次のステップにより，使用するユーザーを <code>docker</code> というグループに追加する (詳細は <a href="https://docs.docker.com/engine/install/linux-postinstall/#manage-docker-as-a-non-root-user" target="_blank" rel="noreferrer">公式ドキュメンテーション &quot;Post-installation steps for Linux&quot;</a> を参照)．</p><p>まず最初に， <code>docker</code> という名前にグループを追加する． インストールによっては，既に <code>docker</code> グループが作られている場合もある．</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki solarized-dark vp-code-dark"><code><span class="line"><span style="color:#268BD2;">$</span><span style="color:#839496;"> </span><span style="color:#2AA198;">sudo</span><span style="color:#839496;"> </span><span style="color:#2AA198;">groupadd</span><span style="color:#839496;"> </span><span style="color:#2AA198;">docker</span></span></code></pre><pre class="shiki solarized-light vp-code-light"><code><span class="line"><span style="color:#268BD2;">$</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">sudo</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">groupadd</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">docker</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>次に，現在使用しているユーザーを <code>docker</code> グループに加える．</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki solarized-dark vp-code-dark"><code><span class="line"><span style="color:#268BD2;">$</span><span style="color:#839496;"> </span><span style="color:#2AA198;">sudo</span><span style="color:#839496;"> </span><span style="color:#2AA198;">usermod</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">-aG</span><span style="color:#839496;"> </span><span style="color:#2AA198;">docker</span><span style="color:#839496;"> </span><span style="color:#268BD2;">$USER</span></span></code></pre><pre class="shiki solarized-light vp-code-light"><code><span class="line"><span style="color:#268BD2;">$</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">sudo</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">usermod</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">-aG</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">docker</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">$USER</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>ここまでできたら，一度ログアウトし，再度ログインする． これによって，グループの変更がターミナルのセッションに反映される．</p><p>設定が正しくできているかを確認するため，次のコマンドを実行してみる．</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki solarized-dark vp-code-dark"><code><span class="line"><span style="color:#268BD2;">$</span><span style="color:#839496;"> </span><span style="color:#2AA198;">docker</span><span style="color:#839496;"> </span><span style="color:#2AA198;">run</span><span style="color:#839496;"> </span><span style="color:#2AA198;">hello-world</span></span></code></pre><pre class="shiki solarized-light vp-code-light"><code><span class="line"><span style="color:#268BD2;">$</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">docker</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">run</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">hello-world</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><code>sudo</code> なしでコンテナが実行できたならば，設定は完了である．</p><h2 id="python-venv-クイックガイド" tabindex="-1">Python <code>venv</code> クイックガイド <a class="header-anchor" href="#python-venv-クイックガイド" aria-label="Permalink to &quot;Python `venv` クイックガイド&quot;">​</a></h2><p>他人からもらったプログラムで， numpy や scipy のバージョンが違う！などの理由で，プログラムが動かない，という経験をしたことがある人は多いのではないだろうか． もし，自分の計算機の中に一つしか Python 環境がないとすると，プロジェクトを切り替えるごとに正しいバージョンをインストールし直さなければならず，これは大変な手間である．</p><p>コードのシェアをよりスムーズにするためには，ライブラリのバージョンはプロジェクトごとに管理されるべきである． それを可能にするのが Python 仮想環境とよばれるツールであり， <a href="https://docs.python.org/3/tutorial/venv.html" target="_blank" rel="noreferrer">venv</a>, <a href="https://github.com/pyenv/pyenv" target="_blank" rel="noreferrer">pyenv</a>, <a href="https://docs.conda.io/en/latest/" target="_blank" rel="noreferrer">conda</a> などがよく使われる．</p><p>そのなかでも， <code>venv</code> は Python に標準搭載されているのでとても便利である． <code>pyenv</code> や <code>conda</code> は，別途インストールの必要があるが，それぞれの長所もある．</p><p><code>venv</code> を使って仮想環境を作成するには，</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki solarized-dark vp-code-dark"><code><span class="line"><span style="color:#268BD2;">$</span><span style="color:#839496;"> </span><span style="color:#2AA198;">python</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">-m</span><span style="color:#839496;"> </span><span style="color:#2AA198;">venv</span><span style="color:#839496;"> </span><span style="color:#2AA198;">.env</span></span></code></pre><pre class="shiki solarized-light vp-code-light"><code><span class="line"><span style="color:#268BD2;">$</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">python</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">-m</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">venv</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">.env</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>と実行する． これにより <code>.env/</code> というディレクトリが作られ，このディレクトリに依存するライブラリが保存されることになる．</p><p>この新たな仮想環境を起動するには</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki solarized-dark vp-code-dark"><code><span class="line"><span style="color:#268BD2;">$</span><span style="color:#839496;"> </span><span style="color:#2AA198;">source</span><span style="color:#839496;"> </span><span style="color:#2AA198;">.env/bin/activate</span></span></code></pre><pre class="shiki solarized-light vp-code-light"><code><span class="line"><span style="color:#268BD2;">$</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">source</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">.env/bin/activate</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>と実行する．</p><p>シェルのプロンプトに <code>(.env)</code> という文字が追加されていることを確認しよう (<a href="#fig_venv_prompt">figure_title</a>)． これが， &quot;いまあなたは venv の中にいますよ&quot; というしるしになる．</p><p><img src="'+A+'" alt="venv を起動したときのプロンプト"></p><p>仮想環境を起動すると，それ以降実行する <code>pip</code> コマンドは， <code>.env/</code> 以下にインストールされる．このようにして，プロジェクトごとに使うライブラリのバージョンを切り分けることができる．</p><p>Python では <code>requirements.txt</code> というファイルに依存ライブラリを記述するのが一般的な慣例である．他人からもらったプログラムに， <code>requirements.txt</code> が定義されていれば，</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki solarized-dark vp-code-dark"><code><span class="line"><span style="color:#268BD2;">$</span><span style="color:#839496;"> </span><span style="color:#2AA198;">pip</span><span style="color:#839496;"> </span><span style="color:#2AA198;">install</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">-r</span><span style="color:#839496;"> </span><span style="color:#2AA198;">requirements.txt</span></span></code></pre><pre class="shiki solarized-light vp-code-light"><code><span class="line"><span style="color:#268BD2;">$</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">pip</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">install</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">-r</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">requirements.txt</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>と実行することで，必要なライブラリをインストールし，瞬時に Python 環境を再現することができる．</p><p>venv による仮想環境を保存するディレクトリの名前は任意に選べることができるが， <code>.env</code> という名前を用いるのが一般的である．</p><h2 id="ハンズオン実行用の-docker-image-の使い方" tabindex="-1">ハンズオン実行用の Docker image の使い方 <a class="header-anchor" href="#ハンズオン実行用の-docker-image-の使い方" aria-label="Permalink to &quot;ハンズオン実行用の Docker image の使い方&quot;">​</a></h2><p>ハンズオンを実行するために必要な， Node.js, Python, AWS CDK などがインストールされた Docker image を用意した． これを使用することで，自分のローカルマシンに諸々をインストールする必要なく，すぐにハンズオンのコードが実行できる．</p><p>ハンズオンのいくつかのコマンドは Docker の外 = ローカルマシンのリアル環境で実行されなければならない． それらについてはハンズオンの該当箇所に注意書きとして記してある．</p><p>Docker イメージは <a href="https://hub.docker.com/repository/docker/tomomano/labc" target="_blank" rel="noreferrer">Docker Hub</a> においてある． Docker イメージのビルドファイルは GitHub の <a href="https://github.com/tomomano/learn-aws-by-coding-source-code/blob/main/docker/Dockerfile" target="_blank" rel="noreferrer">docker/Dockerfile</a> にある．</p><p>次のコマンドでコンテナを起動する．</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki solarized-dark vp-code-dark"><code><span class="line"><span style="color:#268BD2;">$</span><span style="color:#839496;"> </span><span style="color:#2AA198;">docker</span><span style="color:#839496;"> </span><span style="color:#2AA198;">run</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">-it</span><span style="color:#839496;"> </span><span style="color:#2AA198;">tomomano/labc:latest</span></span></code></pre><pre class="shiki solarized-light vp-code-light"><code><span class="line"><span style="color:#268BD2;">$</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">docker</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">run</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">-it</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">tomomano/labc:latest</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>初回にコマンドを実行したときのみ，イメージが Docker Hub からダウンロード (pull) される． 二回目以降はローカルにダウンロードされたイメージが使用される．</p><p>コンテナが起動すると，次のようなインタラクティブシェルが表示されるはずである (起動時に <code>-it</code> のオプションをつけたのがポイントである)．</p><p>root@aws-handson:~$&lt;/programlisting&gt;</p><p>この状態で <code>ls</code> コマンドを打つと， <code>handson/</code> というディレクトリがあるはずである． ここに <code>cd</code> する．</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki solarized-dark vp-code-dark"><code><span class="line"><span style="color:#268BD2;">$</span><span style="color:#839496;"> </span><span style="color:#2AA198;">cd</span><span style="color:#839496;"> </span><span style="color:#2AA198;">handson</span></span></code></pre><pre class="shiki solarized-light vp-code-light"><code><span class="line"><span style="color:#268BD2;">$</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">cd</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">handson</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>すると，各ハンズオンごとのディレクトリが見つかるはずである．</p><p>あとは，ハンズオンごとにディレクトリを移動し，ハンズオンごとの virtualenv を作成し，スタックのデプロイを行えばよい (<a href="#sec_handson_ec2_run">???</a> など参照)． ハンズオンごとに使用する依存ライブラリが異なるので，それぞれのハンズオンごとに virtualenv を作成するという設計になっている．</p><p>AWS の認証情報を設定することも忘れずに． <a href="#aws_cli_install">AWS CLI のインストール</a> で記述したように， <code>AWS_ACCESS_KEY_ID</code> などの環境変数を設定するのが簡単な方法である． あるいは，<strong>ローカルマシンの</strong> <code>~/.aws/credentials</code> に認証情報が書き込まれているなら，このディレクトリをコンテナに<strong>マウント</strong>することで，同じ認証ファイルをコンテナ内部から参照することが可能である． この選択肢を取る場合は，次のコマンドでコンテナを起動する．</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki solarized-dark vp-code-dark"><code><span class="line"><span style="color:#268BD2;">$</span><span style="color:#839496;"> </span><span style="color:#2AA198;">docker</span><span style="color:#839496;"> </span><span style="color:#2AA198;">run</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">-it</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">-v</span><span style="color:#839496;"> </span><span style="color:#2AA198;">~/.aws:/root/.aws:ro</span><span style="color:#839496;"> </span><span style="color:#2AA198;">tomomano/labc:latest</span></span></code></pre><pre class="shiki solarized-light vp-code-light"><code><span class="line"><span style="color:#268BD2;">$</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">docker</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">run</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">-it</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">-v</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">~/.aws:/root/.aws:ro</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">tomomano/labc:latest</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>これにより，ローカルマシンの <code>~/.aws</code> をコンテナの <code>/root/.aws</code> にマウントすることができる． 最後の <code>:ro</code> は read-only を意味する． 大切な認証ファイルが誤って書き換えられてしまわないように， read-only のフラグをつけることをおすすめする．</p><p><code>/root/</code> がコンテナ環境におけるホームディレクトリである． ここで紹介した認証ファイルをマウントするテクニックは， SSH 鍵をコンテナに渡すときなどにも使える．</p>',141),f=[k];function w(_,S,D,C,W,z){return b(),g("div",null,f)}const $=m(B,[["render",w]]);export{Y as __pageData,$ as default};
